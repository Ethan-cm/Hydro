/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   stm32f411e_disco.dts.pre.tmp
 *
 * Directories with bindings:
 *   /home/ethan/Repos/Zephyr/Hydrolab/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/pin-controller@40020000
 *   5   /clocks
 *   6   /clocks/clk-hse
 *   7   /clocks/pll
 *   8   /soc/rcc@40023800
 *   9   /soc/pin-controller@40020000/gpio@40020c00
 *   10  /lcd_0
 *   11  /memory@20000000
 *   12  /clocks/clk-hsi
 *   13  /clocks/clk-lse
 *   14  /clocks/clk-lsi
 *   15  /cpus
 *   16  /cpus/cpu@0
 *   17  /gpio_keys
 *   18  /soc/pin-controller@40020000/gpio@40020000
 *   19  /gpio_keys/button
 *   20  /leds
 *   21  /leds/led_3
 *   22  /leds/led_4
 *   23  /leds/led_5
 *   24  /leds/led_6
 *   25  /pwmleds
 *   26  /soc/interrupt-controller@e000e100
 *   27  /soc/timers@40000800
 *   28  /soc/pin-controller@40020000/tim4_ch1_pd12
 *   29  /soc/pin-controller@40020000/tim4_ch2_pd13
 *   30  /soc/pin-controller@40020000/tim4_ch3_pd14
 *   31  /soc/pin-controller@40020000/tim4_ch4_pd15
 *   32  /soc/timers@40000800/pwm
 *   33  /pwmleds/blue_pwm_led
 *   34  /pwmleds/green_pwm_led
 *   35  /pwmleds/orange_pwm_led
 *   36  /pwmleds/red_pwm_led
 *   37  /soc/adc@40012000
 *   38  /soc/i2c@40005800
 *   39  /soc/i2c@40005c00
 *   40  /soc/dma@40026000
 *   41  /soc/i2s@40003800
 *   42  /soc/i2s@40003c00
 *   43  /soc/dma@40026400
 *   44  /soc/i2s@40013000
 *   45  /soc/i2s@40013400
 *   46  /soc/i2s@40015000
 *   47  /soc/interrupt-controller@40013c00
 *   48  /soc/rtc@40002800
 *   49  /soc/pin-controller@40020000/usart2_rx_pa3
 *   50  /soc/pin-controller@40020000/usart2_tx_pa2
 *   51  /soc/serial@40004400
 *   52  /soc/serial@40011000
 *   53  /soc/serial@40011400
 *   54  /soc/spi@40003800
 *   55  /soc/spi@40003c00
 *   56  /soc/spi@40013000
 *   57  /soc/spi@40013400
 *   58  /soc/spi@40015000
 *   59  /soc/timer@e000e010
 *   60  /otgfs_phy
 *   61  /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *   62  /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *   63  /soc/usb@50000000
 *   64  /soc/watchdog@40002c00
 *   65  /soc/watchdog@40003000
 *   66  /soc/flash-controller@40023c00
 *   67  /soc/flash-controller@40023c00/flash@8000000
 *   68  /soc/pin-controller@40020000/i2c1_scl_pb6
 *   69  /soc/pin-controller@40020000/i2c1_sda_pb9
 *   70  /soc/i2c@40005400
 *   71  /soc/pin-controller@40020000/gpio@40021000
 *   72  /soc/i2c@40005400/lsm303agr-accel@19
 *   73  /soc/i2c@40005400/lsm303agr-magn@1e
 *   74  /soc/pin-controller@40020000/adc1_in0_pa0
 *   75  /soc/pin-controller@40020000/adc1_in10_pc0
 *   76  /soc/pin-controller@40020000/adc1_in11_pc1
 *   77  /soc/pin-controller@40020000/adc1_in12_pc2
 *   78  /soc/pin-controller@40020000/adc1_in13_pc3
 *   79  /soc/pin-controller@40020000/adc1_in14_pc4
 *   80  /soc/pin-controller@40020000/adc1_in15_pc5
 *   81  /soc/pin-controller@40020000/adc1_in1_pa1
 *   82  /soc/pin-controller@40020000/adc1_in2_pa2
 *   83  /soc/pin-controller@40020000/adc1_in3_pa3
 *   84  /soc/pin-controller@40020000/adc1_in4_pa4
 *   85  /soc/pin-controller@40020000/adc1_in5_pa5
 *   86  /soc/pin-controller@40020000/adc1_in6_pa6
 *   87  /soc/pin-controller@40020000/adc1_in7_pa7
 *   88  /soc/pin-controller@40020000/adc1_in8_pb0
 *   89  /soc/pin-controller@40020000/adc1_in9_pb1
 *   90  /soc/pin-controller@40020000/gpio@40020400
 *   91  /soc/pin-controller@40020000/gpio@40020800
 *   92  /soc/pin-controller@40020000/gpio@40021400
 *   93  /soc/pin-controller@40020000/gpio@40021800
 *   94  /soc/pin-controller@40020000/gpio@40021c00
 *   95  /soc/pin-controller@40020000/i2c1_scl_pb8
 *   96  /soc/pin-controller@40020000/i2c1_sda_pb7
 *   97  /soc/pin-controller@40020000/i2c2_scl_pb10
 *   98  /soc/pin-controller@40020000/i2c2_sda_pb3
 *   99  /soc/pin-controller@40020000/i2c2_sda_pb9
 *   100 /soc/pin-controller@40020000/i2c3_scl_pa8
 *   101 /soc/pin-controller@40020000/i2c3_sda_pb4
 *   102 /soc/pin-controller@40020000/i2c3_sda_pb8
 *   103 /soc/pin-controller@40020000/i2c3_sda_pc9
 *   104 /soc/pin-controller@40020000/i2s1_ck_pa5
 *   105 /soc/pin-controller@40020000/i2s1_ck_pb3
 *   106 /soc/pin-controller@40020000/i2s1_sd_pa7
 *   107 /soc/pin-controller@40020000/i2s1_sd_pb5
 *   108 /soc/pin-controller@40020000/i2s1_ws_pa15
 *   109 /soc/pin-controller@40020000/i2s1_ws_pa4
 *   110 /soc/pin-controller@40020000/i2s2_ck_pb10
 *   111 /soc/pin-controller@40020000/i2s2_ck_pb13
 *   112 /soc/pin-controller@40020000/i2s2_ck_pc7
 *   113 /soc/pin-controller@40020000/i2s2_ck_pd3
 *   114 /soc/pin-controller@40020000/i2s2_sd_pb15
 *   115 /soc/pin-controller@40020000/i2s2_sd_pc3
 *   116 /soc/pin-controller@40020000/i2s2_ws_pb12
 *   117 /soc/pin-controller@40020000/i2s2_ws_pb9
 *   118 /soc/pin-controller@40020000/i2s3_ck_pb12
 *   119 /soc/pin-controller@40020000/i2s3_ck_pb3
 *   120 /soc/pin-controller@40020000/i2s3_ck_pc10
 *   121 /soc/pin-controller@40020000/i2s3_sd_pb5
 *   122 /soc/pin-controller@40020000/i2s3_sd_pc12
 *   123 /soc/pin-controller@40020000/i2s3_sd_pd6
 *   124 /soc/pin-controller@40020000/i2s3_ws_pa15
 *   125 /soc/pin-controller@40020000/i2s3_ws_pa4
 *   126 /soc/pin-controller@40020000/i2s4_ck_pb13
 *   127 /soc/pin-controller@40020000/i2s4_ck_pe12
 *   128 /soc/pin-controller@40020000/i2s4_ck_pe2
 *   129 /soc/pin-controller@40020000/i2s4_sd_pa1
 *   130 /soc/pin-controller@40020000/i2s4_sd_pe14
 *   131 /soc/pin-controller@40020000/i2s4_sd_pe6
 *   132 /soc/pin-controller@40020000/i2s4_ws_pb12
 *   133 /soc/pin-controller@40020000/i2s4_ws_pe11
 *   134 /soc/pin-controller@40020000/i2s4_ws_pe4
 *   135 /soc/pin-controller@40020000/i2s5_ck_pb0
 *   136 /soc/pin-controller@40020000/i2s5_ck_pe12
 *   137 /soc/pin-controller@40020000/i2s5_ck_pe2
 *   138 /soc/pin-controller@40020000/i2s5_sd_pa10
 *   139 /soc/pin-controller@40020000/i2s5_sd_pb8
 *   140 /soc/pin-controller@40020000/i2s5_sd_pe14
 *   141 /soc/pin-controller@40020000/i2s5_sd_pe6
 *   142 /soc/pin-controller@40020000/i2s5_ws_pb1
 *   143 /soc/pin-controller@40020000/i2s5_ws_pe11
 *   144 /soc/pin-controller@40020000/i2s5_ws_pe4
 *   145 /soc/pin-controller@40020000/sdio_ck_pb15
 *   146 /soc/pin-controller@40020000/sdio_ck_pc12
 *   147 /soc/pin-controller@40020000/sdio_cmd_pa6
 *   148 /soc/pin-controller@40020000/sdio_cmd_pd2
 *   149 /soc/pin-controller@40020000/sdio_d0_pb4
 *   150 /soc/pin-controller@40020000/sdio_d0_pb7
 *   151 /soc/pin-controller@40020000/sdio_d0_pc8
 *   152 /soc/pin-controller@40020000/sdio_d1_pa8
 *   153 /soc/pin-controller@40020000/sdio_d1_pc9
 *   154 /soc/pin-controller@40020000/sdio_d2_pa9
 *   155 /soc/pin-controller@40020000/sdio_d2_pc10
 *   156 /soc/pin-controller@40020000/sdio_d3_pb5
 *   157 /soc/pin-controller@40020000/sdio_d3_pc11
 *   158 /soc/pin-controller@40020000/sdio_d4_pb8
 *   159 /soc/pin-controller@40020000/sdio_d5_pb9
 *   160 /soc/pin-controller@40020000/sdio_d6_pb14
 *   161 /soc/pin-controller@40020000/sdio_d6_pc6
 *   162 /soc/pin-controller@40020000/sdio_d7_pb10
 *   163 /soc/pin-controller@40020000/sdio_d7_pc7
 *   164 /soc/pin-controller@40020000/spi1_miso_pa6
 *   165 /soc/pin-controller@40020000/spi1_miso_pb4
 *   166 /soc/pin-controller@40020000/spi1_mosi_pa7
 *   167 /soc/pin-controller@40020000/spi1_mosi_pb5
 *   168 /soc/pin-controller@40020000/spi1_nss_pa15
 *   169 /soc/pin-controller@40020000/spi1_nss_pa4
 *   170 /soc/pin-controller@40020000/spi1_sck_pa5
 *   171 /soc/pin-controller@40020000/spi1_sck_pb3
 *   172 /soc/pin-controller@40020000/spi2_miso_pb14
 *   173 /soc/pin-controller@40020000/spi2_miso_pc2
 *   174 /soc/pin-controller@40020000/spi2_mosi_pb15
 *   175 /soc/pin-controller@40020000/spi2_mosi_pc3
 *   176 /soc/pin-controller@40020000/spi2_nss_pb12
 *   177 /soc/pin-controller@40020000/spi2_nss_pb9
 *   178 /soc/pin-controller@40020000/spi2_sck_pb10
 *   179 /soc/pin-controller@40020000/spi2_sck_pb13
 *   180 /soc/pin-controller@40020000/spi2_sck_pc7
 *   181 /soc/pin-controller@40020000/spi2_sck_pd3
 *   182 /soc/pin-controller@40020000/spi3_miso_pb4
 *   183 /soc/pin-controller@40020000/spi3_miso_pc11
 *   184 /soc/pin-controller@40020000/spi3_mosi_pb5
 *   185 /soc/pin-controller@40020000/spi3_mosi_pc12
 *   186 /soc/pin-controller@40020000/spi3_mosi_pd6
 *   187 /soc/pin-controller@40020000/spi3_nss_pa15
 *   188 /soc/pin-controller@40020000/spi3_nss_pa4
 *   189 /soc/pin-controller@40020000/spi3_sck_pb12
 *   190 /soc/pin-controller@40020000/spi3_sck_pb3
 *   191 /soc/pin-controller@40020000/spi3_sck_pc10
 *   192 /soc/pin-controller@40020000/spi4_miso_pa11
 *   193 /soc/pin-controller@40020000/spi4_miso_pe13
 *   194 /soc/pin-controller@40020000/spi4_miso_pe5
 *   195 /soc/pin-controller@40020000/spi4_mosi_pa1
 *   196 /soc/pin-controller@40020000/spi4_mosi_pe14
 *   197 /soc/pin-controller@40020000/spi4_mosi_pe6
 *   198 /soc/pin-controller@40020000/spi4_nss_pb12
 *   199 /soc/pin-controller@40020000/spi4_nss_pe11
 *   200 /soc/pin-controller@40020000/spi4_nss_pe4
 *   201 /soc/pin-controller@40020000/spi4_sck_pb13
 *   202 /soc/pin-controller@40020000/spi4_sck_pe12
 *   203 /soc/pin-controller@40020000/spi4_sck_pe2
 *   204 /soc/pin-controller@40020000/spi5_miso_pa12
 *   205 /soc/pin-controller@40020000/spi5_miso_pe13
 *   206 /soc/pin-controller@40020000/spi5_miso_pe5
 *   207 /soc/pin-controller@40020000/spi5_mosi_pa10
 *   208 /soc/pin-controller@40020000/spi5_mosi_pb8
 *   209 /soc/pin-controller@40020000/spi5_mosi_pe14
 *   210 /soc/pin-controller@40020000/spi5_mosi_pe6
 *   211 /soc/pin-controller@40020000/spi5_nss_pb1
 *   212 /soc/pin-controller@40020000/spi5_nss_pe11
 *   213 /soc/pin-controller@40020000/spi5_nss_pe4
 *   214 /soc/pin-controller@40020000/spi5_sck_pb0
 *   215 /soc/pin-controller@40020000/spi5_sck_pe12
 *   216 /soc/pin-controller@40020000/spi5_sck_pe2
 *   217 /soc/pin-controller@40020000/tim10_ch1_pb8
 *   218 /soc/pin-controller@40020000/tim11_ch1_pb9
 *   219 /soc/pin-controller@40020000/tim1_ch1_pa8
 *   220 /soc/pin-controller@40020000/tim1_ch1_pe9
 *   221 /soc/pin-controller@40020000/tim1_ch1n_pa7
 *   222 /soc/pin-controller@40020000/tim1_ch1n_pb13
 *   223 /soc/pin-controller@40020000/tim1_ch1n_pe8
 *   224 /soc/pin-controller@40020000/tim1_ch2_pa9
 *   225 /soc/pin-controller@40020000/tim1_ch2_pe11
 *   226 /soc/pin-controller@40020000/tim1_ch2n_pb0
 *   227 /soc/pin-controller@40020000/tim1_ch2n_pb14
 *   228 /soc/pin-controller@40020000/tim1_ch2n_pe10
 *   229 /soc/pin-controller@40020000/tim1_ch3_pa10
 *   230 /soc/pin-controller@40020000/tim1_ch3_pe13
 *   231 /soc/pin-controller@40020000/tim1_ch3n_pb1
 *   232 /soc/pin-controller@40020000/tim1_ch3n_pb15
 *   233 /soc/pin-controller@40020000/tim1_ch3n_pe12
 *   234 /soc/pin-controller@40020000/tim1_ch4_pa11
 *   235 /soc/pin-controller@40020000/tim1_ch4_pe14
 *   236 /soc/pin-controller@40020000/tim2_ch1_pa0
 *   237 /soc/pin-controller@40020000/tim2_ch1_pa15
 *   238 /soc/pin-controller@40020000/tim2_ch1_pa5
 *   239 /soc/pin-controller@40020000/tim2_ch2_pa1
 *   240 /soc/pin-controller@40020000/tim2_ch2_pb3
 *   241 /soc/pin-controller@40020000/tim2_ch3_pa2
 *   242 /soc/pin-controller@40020000/tim2_ch3_pb10
 *   243 /soc/pin-controller@40020000/tim2_ch4_pa3
 *   244 /soc/pin-controller@40020000/tim3_ch1_pa6
 *   245 /soc/pin-controller@40020000/tim3_ch1_pb4
 *   246 /soc/pin-controller@40020000/tim3_ch1_pc6
 *   247 /soc/pin-controller@40020000/tim3_ch2_pa7
 *   248 /soc/pin-controller@40020000/tim3_ch2_pb5
 *   249 /soc/pin-controller@40020000/tim3_ch2_pc7
 *   250 /soc/pin-controller@40020000/tim3_ch3_pb0
 *   251 /soc/pin-controller@40020000/tim3_ch3_pc8
 *   252 /soc/pin-controller@40020000/tim3_ch4_pb1
 *   253 /soc/pin-controller@40020000/tim3_ch4_pc9
 *   254 /soc/pin-controller@40020000/tim4_ch1_pb6
 *   255 /soc/pin-controller@40020000/tim4_ch2_pb7
 *   256 /soc/pin-controller@40020000/tim4_ch3_pb8
 *   257 /soc/pin-controller@40020000/tim4_ch4_pb9
 *   258 /soc/pin-controller@40020000/tim5_ch1_pa0
 *   259 /soc/pin-controller@40020000/tim5_ch2_pa1
 *   260 /soc/pin-controller@40020000/tim5_ch3_pa2
 *   261 /soc/pin-controller@40020000/tim5_ch4_pa3
 *   262 /soc/pin-controller@40020000/tim9_ch1_pa2
 *   263 /soc/pin-controller@40020000/tim9_ch1_pe5
 *   264 /soc/pin-controller@40020000/tim9_ch2_pa3
 *   265 /soc/pin-controller@40020000/tim9_ch2_pe6
 *   266 /soc/pin-controller@40020000/usart1_cts_pa11
 *   267 /soc/pin-controller@40020000/usart1_rts_pa12
 *   268 /soc/pin-controller@40020000/usart1_rx_pa10
 *   269 /soc/pin-controller@40020000/usart1_rx_pb3
 *   270 /soc/pin-controller@40020000/usart1_rx_pb7
 *   271 /soc/pin-controller@40020000/usart1_tx_pa15
 *   272 /soc/pin-controller@40020000/usart1_tx_pa9
 *   273 /soc/pin-controller@40020000/usart1_tx_pb6
 *   274 /soc/pin-controller@40020000/usart2_cts_pa0
 *   275 /soc/pin-controller@40020000/usart2_cts_pd3
 *   276 /soc/pin-controller@40020000/usart2_rts_pa1
 *   277 /soc/pin-controller@40020000/usart2_rts_pd4
 *   278 /soc/pin-controller@40020000/usart2_rx_pd6
 *   279 /soc/pin-controller@40020000/usart2_tx_pd5
 *   280 /soc/pin-controller@40020000/usart6_rx_pa12
 *   281 /soc/pin-controller@40020000/usart6_rx_pc7
 *   282 /soc/pin-controller@40020000/usart6_tx_pa11
 *   283 /soc/pin-controller@40020000/usart6_tx_pc6
 *   284 /soc/pin-controller@40020000/usb_otg_fs_id_pa10
 *   285 /soc/pin-controller@40020000/usb_otg_fs_sof_pa8
 *   286 /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9
 *   287 /soc/timers@40000000
 *   288 /soc/timers@40000000/pwm
 *   289 /soc/timers@40000400
 *   290 /soc/timers@40000400/pwm
 *   291 /soc/timers@40000c00
 *   292 /soc/timers@40000c00/pwm
 *   293 /soc/timers@40010000
 *   294 /soc/timers@40010000/pwm
 *   295 /soc/timers@40014000
 *   296 /soc/timers@40014000/pwm
 *   297 /soc/timers@40014400
 *   298 /soc/timers@40014400/pwm
 *   299 /soc/timers@40014800
 *   300 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_gpio_keys) fn(DT_N_S_lcd_0)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_lcd_0, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_gpio_keys) fn(DT_N_S_lcd_0) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_lcd_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	5, /* /clocks */ \
	10, /* /lcd_0 */ \
	11, /* /memory@20000000 */ \
	15, /* /cpus */ \
	17, /* /gpio_keys */ \
	20, /* /leds */ \
	25, /* /pwmleds */ \
	60, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32f411e_disco DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_stm32f411e_disco 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32f411e-disco"}
#define DT_N_P_compatible_IDX_0 "st,stm32f411e-disco"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40010000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40013400) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_i2s_40013000) fn(DT_N_S_soc_S_i2s_40013400) fn(DT_N_S_soc_S_i2s_40015000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40015000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_rtc_40002800) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	27, /* /soc/timers@40000800 */ \
	37, /* /soc/adc@40012000 */ \
	38, /* /soc/i2c@40005800 */ \
	39, /* /soc/i2c@40005c00 */ \
	40, /* /soc/dma@40026000 */ \
	41, /* /soc/i2s@40003800 */ \
	42, /* /soc/i2s@40003c00 */ \
	43, /* /soc/dma@40026400 */ \
	44, /* /soc/i2s@40013000 */ \
	45, /* /soc/i2s@40013400 */ \
	46, /* /soc/i2s@40015000 */ \
	47, /* /soc/interrupt-controller@40013c00 */ \
	48, /* /soc/rtc@40002800 */ \
	51, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40011000 */ \
	53, /* /soc/serial@40011400 */ \
	54, /* /soc/spi@40003800 */ \
	55, /* /soc/spi@40003c00 */ \
	56, /* /soc/spi@40013000 */ \
	57, /* /soc/spi@40013400 */ \
	58, /* /soc/spi@40015000 */ \
	59, /* /soc/timer@e000e010 */ \
	63, /* /soc/usb@50000000 */ \
	64, /* /soc/watchdog@40002c00 */ \
	65, /* /soc/watchdog@40003000 */ \
	66, /* /soc/flash-controller@40023c00 */ \
	70, /* /soc/i2c@40005400 */ \
	287, /* /soc/timers@40000000 */ \
	289, /* /soc/timers@40000400 */ \
	291, /* /soc/timers@40000c00 */ \
	293, /* /soc/timers@40010000 */ \
	295, /* /soc/timers@40014000 */ \
	297, /* /soc/timers@40014400 */ \
	299, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_PATH "/soc/pin-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_FULL_NAME "pin-controller@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12) 
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_SUPPORTS_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	18, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	28, /* /soc/pin-controller@40020000/tim4_ch1_pd12 */ \
	29, /* /soc/pin-controller@40020000/tim4_ch2_pd13 */ \
	30, /* /soc/pin-controller@40020000/tim4_ch3_pd14 */ \
	31, /* /soc/pin-controller@40020000/tim4_ch4_pd15 */ \
	49, /* /soc/pin-controller@40020000/usart2_rx_pa3 */ \
	50, /* /soc/pin-controller@40020000/usart2_tx_pa2 */ \
	61, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	62, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */ \
	68, /* /soc/pin-controller@40020000/i2c1_scl_pb6 */ \
	69, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */ \
	71, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	74, /* /soc/pin-controller@40020000/adc1_in0_pa0 */ \
	75, /* /soc/pin-controller@40020000/adc1_in10_pc0 */ \
	76, /* /soc/pin-controller@40020000/adc1_in11_pc1 */ \
	77, /* /soc/pin-controller@40020000/adc1_in12_pc2 */ \
	78, /* /soc/pin-controller@40020000/adc1_in13_pc3 */ \
	79, /* /soc/pin-controller@40020000/adc1_in14_pc4 */ \
	80, /* /soc/pin-controller@40020000/adc1_in15_pc5 */ \
	81, /* /soc/pin-controller@40020000/adc1_in1_pa1 */ \
	82, /* /soc/pin-controller@40020000/adc1_in2_pa2 */ \
	83, /* /soc/pin-controller@40020000/adc1_in3_pa3 */ \
	84, /* /soc/pin-controller@40020000/adc1_in4_pa4 */ \
	85, /* /soc/pin-controller@40020000/adc1_in5_pa5 */ \
	86, /* /soc/pin-controller@40020000/adc1_in6_pa6 */ \
	87, /* /soc/pin-controller@40020000/adc1_in7_pa7 */ \
	88, /* /soc/pin-controller@40020000/adc1_in8_pb0 */ \
	89, /* /soc/pin-controller@40020000/adc1_in9_pb1 */ \
	90, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	91, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	92, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	93, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	94, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	95, /* /soc/pin-controller@40020000/i2c1_scl_pb8 */ \
	96, /* /soc/pin-controller@40020000/i2c1_sda_pb7 */ \
	97, /* /soc/pin-controller@40020000/i2c2_scl_pb10 */ \
	98, /* /soc/pin-controller@40020000/i2c2_sda_pb3 */ \
	99, /* /soc/pin-controller@40020000/i2c2_sda_pb9 */ \
	100, /* /soc/pin-controller@40020000/i2c3_scl_pa8 */ \
	101, /* /soc/pin-controller@40020000/i2c3_sda_pb4 */ \
	102, /* /soc/pin-controller@40020000/i2c3_sda_pb8 */ \
	103, /* /soc/pin-controller@40020000/i2c3_sda_pc9 */ \
	104, /* /soc/pin-controller@40020000/i2s1_ck_pa5 */ \
	105, /* /soc/pin-controller@40020000/i2s1_ck_pb3 */ \
	106, /* /soc/pin-controller@40020000/i2s1_sd_pa7 */ \
	107, /* /soc/pin-controller@40020000/i2s1_sd_pb5 */ \
	108, /* /soc/pin-controller@40020000/i2s1_ws_pa15 */ \
	109, /* /soc/pin-controller@40020000/i2s1_ws_pa4 */ \
	110, /* /soc/pin-controller@40020000/i2s2_ck_pb10 */ \
	111, /* /soc/pin-controller@40020000/i2s2_ck_pb13 */ \
	112, /* /soc/pin-controller@40020000/i2s2_ck_pc7 */ \
	113, /* /soc/pin-controller@40020000/i2s2_ck_pd3 */ \
	114, /* /soc/pin-controller@40020000/i2s2_sd_pb15 */ \
	115, /* /soc/pin-controller@40020000/i2s2_sd_pc3 */ \
	116, /* /soc/pin-controller@40020000/i2s2_ws_pb12 */ \
	117, /* /soc/pin-controller@40020000/i2s2_ws_pb9 */ \
	118, /* /soc/pin-controller@40020000/i2s3_ck_pb12 */ \
	119, /* /soc/pin-controller@40020000/i2s3_ck_pb3 */ \
	120, /* /soc/pin-controller@40020000/i2s3_ck_pc10 */ \
	121, /* /soc/pin-controller@40020000/i2s3_sd_pb5 */ \
	122, /* /soc/pin-controller@40020000/i2s3_sd_pc12 */ \
	123, /* /soc/pin-controller@40020000/i2s3_sd_pd6 */ \
	124, /* /soc/pin-controller@40020000/i2s3_ws_pa15 */ \
	125, /* /soc/pin-controller@40020000/i2s3_ws_pa4 */ \
	126, /* /soc/pin-controller@40020000/i2s4_ck_pb13 */ \
	127, /* /soc/pin-controller@40020000/i2s4_ck_pe12 */ \
	128, /* /soc/pin-controller@40020000/i2s4_ck_pe2 */ \
	129, /* /soc/pin-controller@40020000/i2s4_sd_pa1 */ \
	130, /* /soc/pin-controller@40020000/i2s4_sd_pe14 */ \
	131, /* /soc/pin-controller@40020000/i2s4_sd_pe6 */ \
	132, /* /soc/pin-controller@40020000/i2s4_ws_pb12 */ \
	133, /* /soc/pin-controller@40020000/i2s4_ws_pe11 */ \
	134, /* /soc/pin-controller@40020000/i2s4_ws_pe4 */ \
	135, /* /soc/pin-controller@40020000/i2s5_ck_pb0 */ \
	136, /* /soc/pin-controller@40020000/i2s5_ck_pe12 */ \
	137, /* /soc/pin-controller@40020000/i2s5_ck_pe2 */ \
	138, /* /soc/pin-controller@40020000/i2s5_sd_pa10 */ \
	139, /* /soc/pin-controller@40020000/i2s5_sd_pb8 */ \
	140, /* /soc/pin-controller@40020000/i2s5_sd_pe14 */ \
	141, /* /soc/pin-controller@40020000/i2s5_sd_pe6 */ \
	142, /* /soc/pin-controller@40020000/i2s5_ws_pb1 */ \
	143, /* /soc/pin-controller@40020000/i2s5_ws_pe11 */ \
	144, /* /soc/pin-controller@40020000/i2s5_ws_pe4 */ \
	145, /* /soc/pin-controller@40020000/sdio_ck_pb15 */ \
	146, /* /soc/pin-controller@40020000/sdio_ck_pc12 */ \
	147, /* /soc/pin-controller@40020000/sdio_cmd_pa6 */ \
	148, /* /soc/pin-controller@40020000/sdio_cmd_pd2 */ \
	149, /* /soc/pin-controller@40020000/sdio_d0_pb4 */ \
	150, /* /soc/pin-controller@40020000/sdio_d0_pb7 */ \
	151, /* /soc/pin-controller@40020000/sdio_d0_pc8 */ \
	152, /* /soc/pin-controller@40020000/sdio_d1_pa8 */ \
	153, /* /soc/pin-controller@40020000/sdio_d1_pc9 */ \
	154, /* /soc/pin-controller@40020000/sdio_d2_pa9 */ \
	155, /* /soc/pin-controller@40020000/sdio_d2_pc10 */ \
	156, /* /soc/pin-controller@40020000/sdio_d3_pb5 */ \
	157, /* /soc/pin-controller@40020000/sdio_d3_pc11 */ \
	158, /* /soc/pin-controller@40020000/sdio_d4_pb8 */ \
	159, /* /soc/pin-controller@40020000/sdio_d5_pb9 */ \
	160, /* /soc/pin-controller@40020000/sdio_d6_pb14 */ \
	161, /* /soc/pin-controller@40020000/sdio_d6_pc6 */ \
	162, /* /soc/pin-controller@40020000/sdio_d7_pb10 */ \
	163, /* /soc/pin-controller@40020000/sdio_d7_pc7 */ \
	164, /* /soc/pin-controller@40020000/spi1_miso_pa6 */ \
	165, /* /soc/pin-controller@40020000/spi1_miso_pb4 */ \
	166, /* /soc/pin-controller@40020000/spi1_mosi_pa7 */ \
	167, /* /soc/pin-controller@40020000/spi1_mosi_pb5 */ \
	168, /* /soc/pin-controller@40020000/spi1_nss_pa15 */ \
	169, /* /soc/pin-controller@40020000/spi1_nss_pa4 */ \
	170, /* /soc/pin-controller@40020000/spi1_sck_pa5 */ \
	171, /* /soc/pin-controller@40020000/spi1_sck_pb3 */ \
	172, /* /soc/pin-controller@40020000/spi2_miso_pb14 */ \
	173, /* /soc/pin-controller@40020000/spi2_miso_pc2 */ \
	174, /* /soc/pin-controller@40020000/spi2_mosi_pb15 */ \
	175, /* /soc/pin-controller@40020000/spi2_mosi_pc3 */ \
	176, /* /soc/pin-controller@40020000/spi2_nss_pb12 */ \
	177, /* /soc/pin-controller@40020000/spi2_nss_pb9 */ \
	178, /* /soc/pin-controller@40020000/spi2_sck_pb10 */ \
	179, /* /soc/pin-controller@40020000/spi2_sck_pb13 */ \
	180, /* /soc/pin-controller@40020000/spi2_sck_pc7 */ \
	181, /* /soc/pin-controller@40020000/spi2_sck_pd3 */ \
	182, /* /soc/pin-controller@40020000/spi3_miso_pb4 */ \
	183, /* /soc/pin-controller@40020000/spi3_miso_pc11 */ \
	184, /* /soc/pin-controller@40020000/spi3_mosi_pb5 */ \
	185, /* /soc/pin-controller@40020000/spi3_mosi_pc12 */ \
	186, /* /soc/pin-controller@40020000/spi3_mosi_pd6 */ \
	187, /* /soc/pin-controller@40020000/spi3_nss_pa15 */ \
	188, /* /soc/pin-controller@40020000/spi3_nss_pa4 */ \
	189, /* /soc/pin-controller@40020000/spi3_sck_pb12 */ \
	190, /* /soc/pin-controller@40020000/spi3_sck_pb3 */ \
	191, /* /soc/pin-controller@40020000/spi3_sck_pc10 */ \
	192, /* /soc/pin-controller@40020000/spi4_miso_pa11 */ \
	193, /* /soc/pin-controller@40020000/spi4_miso_pe13 */ \
	194, /* /soc/pin-controller@40020000/spi4_miso_pe5 */ \
	195, /* /soc/pin-controller@40020000/spi4_mosi_pa1 */ \
	196, /* /soc/pin-controller@40020000/spi4_mosi_pe14 */ \
	197, /* /soc/pin-controller@40020000/spi4_mosi_pe6 */ \
	198, /* /soc/pin-controller@40020000/spi4_nss_pb12 */ \
	199, /* /soc/pin-controller@40020000/spi4_nss_pe11 */ \
	200, /* /soc/pin-controller@40020000/spi4_nss_pe4 */ \
	201, /* /soc/pin-controller@40020000/spi4_sck_pb13 */ \
	202, /* /soc/pin-controller@40020000/spi4_sck_pe12 */ \
	203, /* /soc/pin-controller@40020000/spi4_sck_pe2 */ \
	204, /* /soc/pin-controller@40020000/spi5_miso_pa12 */ \
	205, /* /soc/pin-controller@40020000/spi5_miso_pe13 */ \
	206, /* /soc/pin-controller@40020000/spi5_miso_pe5 */ \
	207, /* /soc/pin-controller@40020000/spi5_mosi_pa10 */ \
	208, /* /soc/pin-controller@40020000/spi5_mosi_pb8 */ \
	209, /* /soc/pin-controller@40020000/spi5_mosi_pe14 */ \
	210, /* /soc/pin-controller@40020000/spi5_mosi_pe6 */ \
	211, /* /soc/pin-controller@40020000/spi5_nss_pb1 */ \
	212, /* /soc/pin-controller@40020000/spi5_nss_pe11 */ \
	213, /* /soc/pin-controller@40020000/spi5_nss_pe4 */ \
	214, /* /soc/pin-controller@40020000/spi5_sck_pb0 */ \
	215, /* /soc/pin-controller@40020000/spi5_sck_pe12 */ \
	216, /* /soc/pin-controller@40020000/spi5_sck_pe2 */ \
	217, /* /soc/pin-controller@40020000/tim10_ch1_pb8 */ \
	218, /* /soc/pin-controller@40020000/tim11_ch1_pb9 */ \
	219, /* /soc/pin-controller@40020000/tim1_ch1_pa8 */ \
	220, /* /soc/pin-controller@40020000/tim1_ch1_pe9 */ \
	221, /* /soc/pin-controller@40020000/tim1_ch1n_pa7 */ \
	222, /* /soc/pin-controller@40020000/tim1_ch1n_pb13 */ \
	223, /* /soc/pin-controller@40020000/tim1_ch1n_pe8 */ \
	224, /* /soc/pin-controller@40020000/tim1_ch2_pa9 */ \
	225, /* /soc/pin-controller@40020000/tim1_ch2_pe11 */ \
	226, /* /soc/pin-controller@40020000/tim1_ch2n_pb0 */ \
	227, /* /soc/pin-controller@40020000/tim1_ch2n_pb14 */ \
	228, /* /soc/pin-controller@40020000/tim1_ch2n_pe10 */ \
	229, /* /soc/pin-controller@40020000/tim1_ch3_pa10 */ \
	230, /* /soc/pin-controller@40020000/tim1_ch3_pe13 */ \
	231, /* /soc/pin-controller@40020000/tim1_ch3n_pb1 */ \
	232, /* /soc/pin-controller@40020000/tim1_ch3n_pb15 */ \
	233, /* /soc/pin-controller@40020000/tim1_ch3n_pe12 */ \
	234, /* /soc/pin-controller@40020000/tim1_ch4_pa11 */ \
	235, /* /soc/pin-controller@40020000/tim1_ch4_pe14 */ \
	236, /* /soc/pin-controller@40020000/tim2_ch1_pa0 */ \
	237, /* /soc/pin-controller@40020000/tim2_ch1_pa15 */ \
	238, /* /soc/pin-controller@40020000/tim2_ch1_pa5 */ \
	239, /* /soc/pin-controller@40020000/tim2_ch2_pa1 */ \
	240, /* /soc/pin-controller@40020000/tim2_ch2_pb3 */ \
	241, /* /soc/pin-controller@40020000/tim2_ch3_pa2 */ \
	242, /* /soc/pin-controller@40020000/tim2_ch3_pb10 */ \
	243, /* /soc/pin-controller@40020000/tim2_ch4_pa3 */ \
	244, /* /soc/pin-controller@40020000/tim3_ch1_pa6 */ \
	245, /* /soc/pin-controller@40020000/tim3_ch1_pb4 */ \
	246, /* /soc/pin-controller@40020000/tim3_ch1_pc6 */ \
	247, /* /soc/pin-controller@40020000/tim3_ch2_pa7 */ \
	248, /* /soc/pin-controller@40020000/tim3_ch2_pb5 */ \
	249, /* /soc/pin-controller@40020000/tim3_ch2_pc7 */ \
	250, /* /soc/pin-controller@40020000/tim3_ch3_pb0 */ \
	251, /* /soc/pin-controller@40020000/tim3_ch3_pc8 */ \
	252, /* /soc/pin-controller@40020000/tim3_ch4_pb1 */ \
	253, /* /soc/pin-controller@40020000/tim3_ch4_pc9 */ \
	254, /* /soc/pin-controller@40020000/tim4_ch1_pb6 */ \
	255, /* /soc/pin-controller@40020000/tim4_ch2_pb7 */ \
	256, /* /soc/pin-controller@40020000/tim4_ch3_pb8 */ \
	257, /* /soc/pin-controller@40020000/tim4_ch4_pb9 */ \
	258, /* /soc/pin-controller@40020000/tim5_ch1_pa0 */ \
	259, /* /soc/pin-controller@40020000/tim5_ch2_pa1 */ \
	260, /* /soc/pin-controller@40020000/tim5_ch3_pa2 */ \
	261, /* /soc/pin-controller@40020000/tim5_ch4_pa3 */ \
	262, /* /soc/pin-controller@40020000/tim9_ch1_pa2 */ \
	263, /* /soc/pin-controller@40020000/tim9_ch1_pe5 */ \
	264, /* /soc/pin-controller@40020000/tim9_ch2_pa3 */ \
	265, /* /soc/pin-controller@40020000/tim9_ch2_pe6 */ \
	266, /* /soc/pin-controller@40020000/usart1_cts_pa11 */ \
	267, /* /soc/pin-controller@40020000/usart1_rts_pa12 */ \
	268, /* /soc/pin-controller@40020000/usart1_rx_pa10 */ \
	269, /* /soc/pin-controller@40020000/usart1_rx_pb3 */ \
	270, /* /soc/pin-controller@40020000/usart1_rx_pb7 */ \
	271, /* /soc/pin-controller@40020000/usart1_tx_pa15 */ \
	272, /* /soc/pin-controller@40020000/usart1_tx_pa9 */ \
	273, /* /soc/pin-controller@40020000/usart1_tx_pb6 */ \
	274, /* /soc/pin-controller@40020000/usart2_cts_pa0 */ \
	275, /* /soc/pin-controller@40020000/usart2_cts_pd3 */ \
	276, /* /soc/pin-controller@40020000/usart2_rts_pa1 */ \
	277, /* /soc/pin-controller@40020000/usart2_rts_pd4 */ \
	278, /* /soc/pin-controller@40020000/usart2_rx_pd6 */ \
	279, /* /soc/pin-controller@40020000/usart2_tx_pd5 */ \
	280, /* /soc/pin-controller@40020000/usart6_rx_pa12 */ \
	281, /* /soc/pin-controller@40020000/usart6_rx_pc7 */ \
	282, /* /soc/pin-controller@40020000/usart6_tx_pa11 */ \
	283, /* /soc/pin-controller@40020000/usart6_tx_pc6 */ \
	284, /* /soc/pin-controller@40020000/usb_otg_fs_id_pa10 */ \
	285, /* /soc/pin-controller@40020000/usb_otg_fs_sof_pa8 */ \
	286, /* /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_40020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_pll) 
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/clk-hse */ \
	7, /* /clocks/pll */ \
	12, /* /clocks/clk-hsi */ \
	13, /* /clocks/clk-lse */ \
	14, /* /clocks/clk-lsi */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	7, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32f4-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32f4-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	6, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	8, /* /soc/rcc@40023800 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32f4_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32f4_pll_clock 1
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 4
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 96
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 2
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 4
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 3, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32f4-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32f4-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40023800
 *
 * Node identifier: DT_N_S_soc_S_rcc_40023800
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40023800_PATH "/soc/rcc@40023800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40023800_FULL_NAME "rcc@40023800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40023800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40023800_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40023800_REQUIRES_ORDS \
	3, /* /soc */ \
	7, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40023800_SUPPORTS_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	18, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	27, /* /soc/timers@40000800 */ \
	37, /* /soc/adc@40012000 */ \
	38, /* /soc/i2c@40005800 */ \
	39, /* /soc/i2c@40005c00 */ \
	40, /* /soc/dma@40026000 */ \
	41, /* /soc/i2s@40003800 */ \
	42, /* /soc/i2s@40003c00 */ \
	43, /* /soc/dma@40026400 */ \
	44, /* /soc/i2s@40013000 */ \
	45, /* /soc/i2s@40013400 */ \
	46, /* /soc/i2s@40015000 */ \
	48, /* /soc/rtc@40002800 */ \
	51, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40011000 */ \
	53, /* /soc/serial@40011400 */ \
	54, /* /soc/spi@40003800 */ \
	55, /* /soc/spi@40003c00 */ \
	56, /* /soc/spi@40013000 */ \
	57, /* /soc/spi@40013400 */ \
	58, /* /soc/spi@40015000 */ \
	63, /* /soc/usb@50000000 */ \
	64, /* /soc/watchdog@40002c00 */ \
	70, /* /soc/i2c@40005400 */ \
	71, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	90, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	91, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	92, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	93, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	94, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	287, /* /soc/timers@40000000 */ \
	289, /* /soc/timers@40000400 */ \
	291, /* /soc/timers@40000c00 */ \
	293, /* /soc/timers@40010000 */ \
	295, /* /soc/timers@40014000 */ \
	297, /* /soc/timers@40014400 */ \
	299, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40023800_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40023800
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40023800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40023800_REG_NUM 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_ADDRESS 1073887232 /* 0x40023800 */
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40023800_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40023800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40023800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40023800_P_reg {1073887232 /* 0x40023800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0 1073887232
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, reg, 0) \
	fn(DT_N_S_soc_S_rcc_40023800, reg, 1)
#define DT_N_S_soc_S_rcc_40023800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rcc_40023800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency 96000000
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler 2
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_ENUM_IDX 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PATH "/soc/pin-controller@40020000/gpio@40020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FULL_NAME "gpio@40020c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_SUPPORTS_ORDS \
	10, /* /lcd_0 */ \
	21, /* /leds/led_3 */ \
	22, /* /leds/led_4 */ \
	23, /* /leds/led_5 */ \
	24, /* /leds/led_6 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_ADDRESS 1073875968 /* 0x40020c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg {1073875968 /* 0x40020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0 1073875968
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label "GPIOD"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_STRING_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_STRING_UPPER_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /lcd_0
 *
 * Node identifier: DT_N_S_lcd_0
 *
 * Binding (compatible = zephyr,lcd):
 *   /home/ethan/Repos/Zephyr/Hydrolab/dts/bindings/LCD/zephyr,LCD.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_lcd_0_PATH "/lcd_0"

/* Node's name with unit-address: */
#define DT_N_S_lcd_0_FULL_NAME "lcd_0"

/* Node parent (/) identifier: */
#define DT_N_S_lcd_0_PARENT DT_N
#define DT_N_S_lcd_0_FOREACH_CHILD(fn) 
#define DT_N_S_lcd_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_lcd_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_lcd_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_lcd_0_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_lcd_0_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_lcd_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_lcd_0_EXISTS 1
#define DT_N_INST_0_zephyr_lcd DT_N_S_lcd_0
#define DT_N_NODELABEL_lcd0    DT_N_S_lcd_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_lcd_0_REG_NUM 0
#define DT_N_S_lcd_0_IRQ_NUM 0
#define DT_N_S_lcd_0_COMPAT_MATCHES_zephyr_lcd 1
#define DT_N_S_lcd_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_lcd_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_EXISTS 1
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_VAL_pin 13
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_VAL_flags 0
#define DT_N_S_lcd_0_P_output_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_lcd_0_P_output_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_lcd_0, output_gpios, 0)
#define DT_N_S_lcd_0_P_output_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_lcd_0, output_gpios, 0, __VA_ARGS__)
#define DT_N_S_lcd_0_P_output_gpios_LEN 1
#define DT_N_S_lcd_0_P_output_gpios_EXISTS 1
#define DT_N_S_lcd_0_P_compatible {"zephyr,lcd"}
#define DT_N_S_lcd_0_P_compatible_IDX_0 "zephyr,lcd"
#define DT_N_S_lcd_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_lcd_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_lcd_0, compatible, 0)
#define DT_N_S_lcd_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_lcd_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_lcd_0_P_compatible_LEN 1
#define DT_N_S_lcd_0_P_compatible_EXISTS 1
#define DT_N_S_lcd_0_P_label "LCD_0"
#define DT_N_S_lcd_0_P_label_STRING_TOKEN LCD_0
#define DT_N_S_lcd_0_P_label_STRING_UPPER_TOKEN LCD_0
#define DT_N_S_lcd_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_lcd_0, label, 0) \
	fn(DT_N_S_lcd_0, label, 1) \
	fn(DT_N_S_lcd_0, label, 2) \
	fn(DT_N_S_lcd_0, label, 3) \
	fn(DT_N_S_lcd_0, label, 4)
#define DT_N_S_lcd_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_lcd_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_lcd_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_lcd_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_lcd_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_lcd_0, label, 4, __VA_ARGS__)
#define DT_N_S_lcd_0_P_label_EXISTS 1
#define DT_N_S_lcd_0_P_wakeup_source 0
#define DT_N_S_lcd_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 131072 /* 0x20000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 131072
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	16, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	15, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button) 
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	19, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PATH "/soc/pin-controller@40020000/gpio@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FULL_NAME "gpio@40020000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_SUPPORTS_ORDS \
	19, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_STRING_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_STRING_UPPER_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	17, /* /gpio_keys */ \
	18, /* /soc/pin-controller@40020000/gpio@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0) \
	fn(DT_N_S_gpio_keys_S_button, label, 1) \
	fn(DT_N_S_gpio_keys_S_button, label, 2) \
	fn(DT_N_S_gpio_keys_S_button, label, 3)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	21, /* /leds/led_3 */ \
	22, /* /leds/led_4 */ \
	23, /* /leds/led_5 */ \
	24, /* /leds/led_6 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	20, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led0             DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_orange_led_3 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0) \
	fn(DT_N_S_leds_S_led_3, label, 1) \
	fn(DT_N_S_leds_S_led_3, label, 2) \
	fn(DT_N_S_leds_S_led_3, label, 3) \
	fn(DT_N_S_leds_S_led_3, label, 4) \
	fn(DT_N_S_leds_S_led_3, label, 5) \
	fn(DT_N_S_leds_S_led_3, label, 6) \
	fn(DT_N_S_leds_S_led_3, label, 7)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_4
 *
 * Node identifier: DT_N_S_leds_S_led_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_4_PATH "/leds/led_4"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_4_FULL_NAME "led_4"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_4_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_4_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_4_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_4_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	20, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_4_EXISTS 1
#define DT_N_ALIAS_led1            DT_N_S_leds_S_led_4
#define DT_N_NODELABEL_green_led_4 DT_N_S_leds_S_led_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_4_REG_NUM 0
#define DT_N_S_leds_S_led_4_IRQ_NUM 0
#define DT_N_S_leds_S_led_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_LEN 1
#define DT_N_S_leds_S_led_4_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label "User LD4"
#define DT_N_S_leds_S_led_4_P_label_STRING_TOKEN User_LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_UPPER_TOKEN USER_LD4
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, label, 0) \
	fn(DT_N_S_leds_S_led_4, label, 1) \
	fn(DT_N_S_leds_S_led_4, label, 2) \
	fn(DT_N_S_leds_S_led_4, label, 3) \
	fn(DT_N_S_leds_S_led_4, label, 4) \
	fn(DT_N_S_leds_S_led_4, label, 5) \
	fn(DT_N_S_leds_S_led_4, label, 6) \
	fn(DT_N_S_leds_S_led_4, label, 7)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_5
 *
 * Node identifier: DT_N_S_leds_S_led_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_5_PATH "/leds/led_5"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_5_FULL_NAME "led_5"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_5_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_5_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_5_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_5_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	20, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_5_EXISTS 1
#define DT_N_ALIAS_led2          DT_N_S_leds_S_led_5
#define DT_N_NODELABEL_red_led_5 DT_N_S_leds_S_led_5

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_5_REG_NUM 0
#define DT_N_S_leds_S_led_5_IRQ_NUM 0
#define DT_N_S_leds_S_led_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_LEN 1
#define DT_N_S_leds_S_led_5_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label "User LD5"
#define DT_N_S_leds_S_led_5_P_label_STRING_TOKEN User_LD5
#define DT_N_S_leds_S_led_5_P_label_STRING_UPPER_TOKEN USER_LD5
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, label, 0) \
	fn(DT_N_S_leds_S_led_5, label, 1) \
	fn(DT_N_S_leds_S_led_5, label, 2) \
	fn(DT_N_S_leds_S_led_5, label, 3) \
	fn(DT_N_S_leds_S_led_5, label, 4) \
	fn(DT_N_S_leds_S_led_5, label, 5) \
	fn(DT_N_S_leds_S_led_5, label, 6) \
	fn(DT_N_S_leds_S_led_5, label, 7)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_6
 *
 * Node identifier: DT_N_S_leds_S_led_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_6_PATH "/leds/led_6"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_6_FULL_NAME "led_6"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_6_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_6_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_6_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_6_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	20, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_6_EXISTS 1
#define DT_N_ALIAS_led3           DT_N_S_leds_S_led_6
#define DT_N_NODELABEL_blue_led_6 DT_N_S_leds_S_led_6

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_6_REG_NUM 0
#define DT_N_S_leds_S_led_6_IRQ_NUM 0
#define DT_N_S_leds_S_led_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_LEN 1
#define DT_N_S_leds_S_led_6_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label "User LD6"
#define DT_N_S_leds_S_led_6_P_label_STRING_TOKEN User_LD6
#define DT_N_S_leds_S_led_6_P_label_STRING_UPPER_TOKEN USER_LD6
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, label, 0) \
	fn(DT_N_S_leds_S_led_6, label, 1) \
	fn(DT_N_S_leds_S_led_6, label, 2) \
	fn(DT_N_S_leds_S_led_6, label, 3) \
	fn(DT_N_S_leds_S_led_6, label, 4) \
	fn(DT_N_S_leds_S_led_6, label, 5) \
	fn(DT_N_S_leds_S_led_6, label, 6) \
	fn(DT_N_S_leds_S_led_6, label, 7)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led) 
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	33, /* /pwmleds/blue_pwm_led */ \
	34, /* /pwmleds/green_pwm_led */ \
	35, /* /pwmleds/orange_pwm_led */ \
	36, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	27, /* /soc/timers@40000800 */ \
	37, /* /soc/adc@40012000 */ \
	38, /* /soc/i2c@40005800 */ \
	39, /* /soc/i2c@40005c00 */ \
	40, /* /soc/dma@40026000 */ \
	41, /* /soc/i2s@40003800 */ \
	42, /* /soc/i2s@40003c00 */ \
	43, /* /soc/dma@40026400 */ \
	44, /* /soc/i2s@40013000 */ \
	45, /* /soc/i2s@40013400 */ \
	46, /* /soc/i2s@40015000 */ \
	48, /* /soc/rtc@40002800 */ \
	51, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40011000 */ \
	53, /* /soc/serial@40011400 */ \
	54, /* /soc/spi@40003800 */ \
	55, /* /soc/spi@40003c00 */ \
	56, /* /soc/spi@40013000 */ \
	57, /* /soc/spi@40013400 */ \
	58, /* /soc/spi@40015000 */ \
	63, /* /soc/usb@50000000 */ \
	64, /* /soc/watchdog@40002c00 */ \
	66, /* /soc/flash-controller@40023c00 */ \
	70, /* /soc/i2c@40005400 */ \
	287, /* /soc/timers@40000000 */ \
	289, /* /soc/timers@40000400 */ \
	291, /* /soc/timers@40000c00 */ \
	293, /* /soc/timers@40010000 */ \
	295, /* /soc/timers@40014000 */ \
	297, /* /soc/timers@40014400 */ \
	299, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	32, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_label "TIMERS_4"
#define DT_N_S_soc_S_timers_40000800_P_label_STRING_TOKEN TIMERS_4
#define DT_N_S_soc_S_timers_40000800_P_label_STRING_UPPER_TOKEN TIMERS_4
#define DT_N_S_soc_S_timers_40000800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800, label, 4) \
	fn(DT_N_S_soc_S_timers_40000800, label, 5) \
	fn(DT_N_S_soc_S_timers_40000800, label, 6) \
	fn(DT_N_S_soc_S_timers_40000800, label, 7)
#define DT_N_S_soc_S_timers_40000800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1)
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch1_pd12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PATH "/soc/pin-controller@40020000/tim4_ch1_pd12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FULL_NAME "tim4_ch1_pd12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_SUPPORTS_ORDS \
	32, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pd12 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux 15362
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch2_pd13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PATH "/soc/pin-controller@40020000/tim4_ch2_pd13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FULL_NAME "tim4_ch2_pd13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_SUPPORTS_ORDS \
	32, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_EXISTS 1
#define DT_N_NODELABEL_tim4_ch2_pd13 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux 15618
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch3_pd14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PATH "/soc/pin-controller@40020000/tim4_ch3_pd14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FULL_NAME "tim4_ch3_pd14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_SUPPORTS_ORDS \
	32, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_EXISTS 1
#define DT_N_NODELABEL_tim4_ch3_pd14 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux 15874
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch4_pd15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PATH "/soc/pin-controller@40020000/tim4_ch4_pd15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FULL_NAME "tim4_ch4_pd15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_SUPPORTS_ORDS \
	32, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_EXISTS 1
#define DT_N_NODELABEL_tim4_ch4_pd15 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux 16130
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	27, /* /soc/timers@40000800 */ \
	28, /* /soc/pin-controller@40020000/tim4_ch1_pd12 */ \
	29, /* /soc/pin-controller@40020000/tim4_ch2_pd13 */ \
	30, /* /soc/pin-controller@40020000/tim4_ch3_pd14 */ \
	31, /* /soc/pin-controller@40020000/tim4_ch4_pd15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS \
	33, /* /pwmleds/blue_pwm_led */ \
	34, /* /pwmleds/green_pwm_led */ \
	35, /* /pwmleds/orange_pwm_led */ \
	36, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_NODELABEL_pwm4      DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label "PWM_4"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_STRING_TOKEN PWM_4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /pwmleds/blue_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_blue_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PATH "/pwmleds/blue_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_blue_pwm_led_FULL_NAME "blue_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_blue_pwm_led_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REQUIRES_ORDS \
	25, /* /pwmleds */ \
	32, /* /soc/timers@40000800/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_blue_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_blue_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led3         DT_N_S_pwmleds_S_blue_pwm_led
#define DT_N_NODELABEL_blue_pwm_led DT_N_S_pwmleds_S_blue_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel 4
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_period 0
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/green_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_green_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_green_pwm_led_PATH "/pwmleds/green_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_green_pwm_led_FULL_NAME "green_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_green_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_green_pwm_led_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_green_pwm_led_REQUIRES_ORDS \
	25, /* /pwmleds */ \
	32, /* /soc/timers@40000800/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_green_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_green_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led0          DT_N_S_pwmleds_S_green_pwm_led
#define DT_N_NODELABEL_green_pwm_led DT_N_S_pwmleds_S_green_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_green_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_green_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_period 0
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/orange_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_orange_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PATH "/pwmleds/orange_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_orange_pwm_led_FULL_NAME "orange_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_orange_pwm_led_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_orange_pwm_led_REQUIRES_ORDS \
	25, /* /pwmleds */ \
	32, /* /soc/timers@40000800/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_orange_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_orange_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led1           DT_N_S_pwmleds_S_orange_pwm_led
#define DT_N_NODELABEL_orange_pwm_led DT_N_S_pwmleds_S_orange_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_orange_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_period 0
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/red_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_red_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_red_pwm_led_PATH "/pwmleds/red_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_red_pwm_led_FULL_NAME "red_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_red_pwm_led_PARENT DT_N_S_pwmleds
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_red_pwm_led_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_red_pwm_led_REQUIRES_ORDS \
	25, /* /pwmleds */ \
	32, /* /soc/timers@40000800/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_red_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_red_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led2        DT_N_S_pwmleds_S_red_pwm_led
#define DT_N_NODELABEL_red_pwm_led DT_N_S_pwmleds_S_red_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_red_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_red_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel 3
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_period 0
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012000
 *
 * Node identifier: DT_N_S_soc_S_adc_40012000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012000_PATH "/soc/adc@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012000_FULL_NAME "adc@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_40012000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012000_REG_NUM 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012000_P_reg {1073815552 /* 0x40012000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, reg, 0) \
	fn(DT_N_S_soc_S_adc_40012000, reg, 1)
#define DT_N_S_soc_S_adc_40012000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40012000, interrupts, 1)
#define DT_N_S_soc_S_adc_40012000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_40012000_P_label_STRING_TOKEN ADC_1
#define DT_N_S_soc_S_adc_40012000_P_label_STRING_UPPER_TOKEN ADC_1
#define DT_N_S_soc_S_adc_40012000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, label, 0) \
	fn(DT_N_S_soc_S_adc_40012000, label, 1) \
	fn(DT_N_S_soc_S_adc_40012000, label, 2) \
	fn(DT_N_S_soc_S_adc_40012000, label, 3) \
	fn(DT_N_S_soc_S_adc_40012000, label, 4)
#define DT_N_S_soc_S_adc_40012000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, status, 0) \
	fn(DT_N_S_soc_S_adc_40012000, status, 1) \
	fn(DT_N_S_soc_S_adc_40012000, status, 2) \
	fn(DT_N_S_soc_S_adc_40012000, status, 3) \
	fn(DT_N_S_soc_S_adc_40012000, status, 4) \
	fn(DT_N_S_soc_S_adc_40012000, status, 5) \
	fn(DT_N_S_soc_S_adc_40012000, status, 6) \
	fn(DT_N_S_soc_S_adc_40012000, status, 7)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, compatible, 0)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_40005800_P_label_STRING_TOKEN I2C_2
#define DT_N_S_soc_S_i2c_40005800_P_label_STRING_UPPER_TOKEN I2C_2
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4)
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 7)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_UPPER_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4)
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 7)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026000
 *
 * Node identifier: DT_N_S_soc_S_dma_40026000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026000_PATH "/soc/dma@40026000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026000_FULL_NAME "dma@40026000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026000_SUPPORTS_ORDS \
	41, /* /soc/i2s@40003800 */ \
	42, /* /soc/i2s@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40026000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026000_REG_NUM 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_ADDRESS 1073897472 /* 0x40026000 */
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026000_P_reg {1073897472 /* 0x40026000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0 1073897472
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026000, reg, 1)
#define DT_N_S_soc_S_dma_40026000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 15)
#define DT_N_S_soc_S_dma_40026000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 15, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_label "DMA_1"
#define DT_N_S_soc_S_dma_40026000_P_label_STRING_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40026000_P_label_STRING_UPPER_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40026000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, label, 0) \
	fn(DT_N_S_soc_S_dma_40026000, label, 1) \
	fn(DT_N_S_soc_S_dma_40026000, label, 2) \
	fn(DT_N_S_soc_S_dma_40026000, label, 3) \
	fn(DT_N_S_soc_S_dma_40026000, label, 4)
#define DT_N_S_soc_S_dma_40026000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, status, 0) \
	fn(DT_N_S_soc_S_dma_40026000, status, 1) \
	fn(DT_N_S_soc_S_dma_40026000, status, 2) \
	fn(DT_N_S_soc_S_dma_40026000, status, 3) \
	fn(DT_N_S_soc_S_dma_40026000, status, 4) \
	fn(DT_N_S_soc_S_dma_40026000, status, 5) \
	fn(DT_N_S_soc_S_dma_40026000, status, 6) \
	fn(DT_N_S_soc_S_dma_40026000, status, 7)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003800
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003800
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003800_PATH "/soc/i2s@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME "i2s@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003800_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	40, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003800_EXISTS 1
#define DT_N_INST_0_st_stm32_i2s DT_N_S_soc_S_i2s_40003800
#define DT_N_NODELABEL_i2s2      DT_N_S_soc_S_i2s_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003800_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, reg, 1)
#define DT_N_S_soc_S_i2s_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_label "I2S_2"
#define DT_N_S_soc_S_i2s_40003800_P_label_STRING_TOKEN I2S_2
#define DT_N_S_soc_S_i2s_40003800_P_label_STRING_UPPER_TOKEN I2S_2
#define DT_N_S_soc_S_i2s_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 4)
#define DT_N_S_soc_S_i2s_40003800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 7)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003c00
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003c00
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003c00_PATH "/soc/i2s@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME "i2s@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003c00_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003c00_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	40, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2s DT_N_S_soc_S_i2s_40003c00
#define DT_N_NODELABEL_i2s3      DT_N_S_soc_S_i2s_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003c00_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, reg, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel 5
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_label "I2S_3"
#define DT_N_S_soc_S_i2s_40003c00_P_label_STRING_TOKEN I2S_3
#define DT_N_S_soc_S_i2s_40003c00_P_label_STRING_UPPER_TOKEN I2S_3
#define DT_N_S_soc_S_i2s_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 4)
#define DT_N_S_soc_S_i2s_40003c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 7)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026400
 *
 * Node identifier: DT_N_S_soc_S_dma_40026400
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026400_PATH "/soc/dma@40026400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026400_FULL_NAME "dma@40026400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026400_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026400_SUPPORTS_ORDS \
	44, /* /soc/i2s@40013000 */ \
	45, /* /soc/i2s@40013400 */ \
	46, /* /soc/i2s@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40026400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026400_REG_NUM 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_ADDRESS 1073898496 /* 0x40026400 */
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026400_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026400_P_reg {1073898496 /* 0x40026400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0 1073898496
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026400, reg, 1)
#define DT_N_S_soc_S_dma_40026400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 15)
#define DT_N_S_soc_S_dma_40026400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 15, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_label "DMA_2"
#define DT_N_S_soc_S_dma_40026400_P_label_STRING_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40026400_P_label_STRING_UPPER_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40026400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, label, 0) \
	fn(DT_N_S_soc_S_dma_40026400, label, 1) \
	fn(DT_N_S_soc_S_dma_40026400, label, 2) \
	fn(DT_N_S_soc_S_dma_40026400, label, 3) \
	fn(DT_N_S_soc_S_dma_40026400, label, 4)
#define DT_N_S_soc_S_dma_40026400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, status, 0) \
	fn(DT_N_S_soc_S_dma_40026400, status, 1) \
	fn(DT_N_S_soc_S_dma_40026400, status, 2) \
	fn(DT_N_S_soc_S_dma_40026400, status, 3) \
	fn(DT_N_S_soc_S_dma_40026400, status, 4) \
	fn(DT_N_S_soc_S_dma_40026400, status, 5) \
	fn(DT_N_S_soc_S_dma_40026400, status, 6) \
	fn(DT_N_S_soc_S_dma_40026400, status, 7)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40013000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40013000
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40013000_PATH "/soc/i2s@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME "i2s@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40013000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40013000_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	43, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40013000_EXISTS 1
#define DT_N_INST_2_st_stm32_i2s DT_N_S_soc_S_i2s_40013000
#define DT_N_NODELABEL_i2s1      DT_N_S_soc_S_i2s_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40013000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, reg, 1)
#define DT_N_S_soc_S_i2s_40013000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, interrupts, 1)
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel 2
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_label "I2S_1"
#define DT_N_S_soc_S_i2s_40013000_P_label_STRING_TOKEN I2S_1
#define DT_N_S_soc_S_i2s_40013000_P_label_STRING_UPPER_TOKEN I2S_1
#define DT_N_S_soc_S_i2s_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, label, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 1) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 2) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 3) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 4)
#define DT_N_S_soc_S_i2s_40013000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, status, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 1) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 2) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 3) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 4) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 5) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 6) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 7)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40013400
 *
 * Node identifier: DT_N_S_soc_S_i2s_40013400
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40013400_PATH "/soc/i2s@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40013400_FULL_NAME "i2s@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40013400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40013400_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40013400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	43, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40013400_EXISTS 1
#define DT_N_INST_3_st_stm32_i2s DT_N_S_soc_S_i2s_40013400
#define DT_N_NODELABEL_i2s4      DT_N_S_soc_S_i2s_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40013400_REG_NUM 1
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, reg, 1)
#define DT_N_S_soc_S_i2s_40013400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, interrupts, 1)
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot 4
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot 4
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40013400_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_label "I2S_4"
#define DT_N_S_soc_S_i2s_40013400_P_label_STRING_TOKEN I2S_4
#define DT_N_S_soc_S_i2s_40013400_P_label_STRING_UPPER_TOKEN I2S_4
#define DT_N_S_soc_S_i2s_40013400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, label, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 1) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 2) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 3) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 4)
#define DT_N_S_soc_S_i2s_40013400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_status "disabled"
#define DT_N_S_soc_S_i2s_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, status, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 1) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 2) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 3) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 4) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 5) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 6) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 7)
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40013400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40015000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40015000
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40015000_PATH "/soc/i2s@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40015000_FULL_NAME "i2s@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40015000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40015000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	43, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40015000_EXISTS 1
#define DT_N_INST_4_st_stm32_i2s DT_N_S_soc_S_i2s_40015000
#define DT_N_NODELABEL_i2s5      DT_N_S_soc_S_i2s_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40015000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, reg, 1)
#define DT_N_S_soc_S_i2s_40015000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, interrupts, 1)
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel 6
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot 7
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel 5
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot 7
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40015000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_label "I2S_5"
#define DT_N_S_soc_S_i2s_40015000_P_label_STRING_TOKEN I2S_5
#define DT_N_S_soc_S_i2s_40015000_P_label_STRING_UPPER_TOKEN I2S_5
#define DT_N_S_soc_S_i2s_40015000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, label, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 1) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 2) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 3) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 4)
#define DT_N_S_soc_S_i2s_40015000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, status, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 1) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 2) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 3) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 4) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 5) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 6) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 7)
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40015000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40013c00
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40013c00
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PATH "/soc/interrupt-controller@40013c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FULL_NAME "interrupt-controller@40013c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40013c00
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40013c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_ADDRESS 1073822720 /* 0x40013c00 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg {1073822720 /* 0x40013c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0 1073822720
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, label, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4)
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PATH "/soc/pin-controller@40020000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_SUPPORTS_ORDS \
	51, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux 775
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PATH "/soc/pin-controller@40020000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_SUPPORTS_ORDS \
	51, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux 519
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	49, /* /soc/pin-controller@40020000/usart2_rx_pa3 */ \
	50, /* /soc/pin-controller@40020000/usart2_tx_pa2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1)
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_label "UART_2"
#define DT_N_S_soc_S_serial_40004400_P_label_STRING_TOKEN UART_2
#define DT_N_S_soc_S_serial_40004400_P_label_STRING_UPPER_TOKEN UART_2
#define DT_N_S_soc_S_serial_40004400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, label, 0) \
	fn(DT_N_S_soc_S_serial_40004400, label, 1) \
	fn(DT_N_S_soc_S_serial_40004400, label, 2) \
	fn(DT_N_S_soc_S_serial_40004400, label, 3) \
	fn(DT_N_S_soc_S_serial_40004400, label, 4) \
	fn(DT_N_S_soc_S_serial_40004400, label, 5)
#define DT_N_S_soc_S_serial_40004400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011000
 *
 * Node identifier: DT_N_S_soc_S_serial_40011000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011000_PATH "/soc/serial@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011000_FULL_NAME "serial@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011000_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40011000
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40011000
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011000_REG_NUM 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011000, reg, 1)
#define DT_N_S_soc_S_serial_40011000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011000, interrupts, 1)
#define DT_N_S_soc_S_serial_40011000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_label "UART_1"
#define DT_N_S_soc_S_serial_40011000_P_label_STRING_TOKEN UART_1
#define DT_N_S_soc_S_serial_40011000_P_label_STRING_UPPER_TOKEN UART_1
#define DT_N_S_soc_S_serial_40011000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, label, 0) \
	fn(DT_N_S_soc_S_serial_40011000, label, 1) \
	fn(DT_N_S_soc_S_serial_40011000, label, 2) \
	fn(DT_N_S_soc_S_serial_40011000, label, 3) \
	fn(DT_N_S_soc_S_serial_40011000, label, 4) \
	fn(DT_N_S_soc_S_serial_40011000, label, 5)
#define DT_N_S_soc_S_serial_40011000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status "disabled"
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, status, 0) \
	fn(DT_N_S_soc_S_serial_40011000, status, 1) \
	fn(DT_N_S_soc_S_serial_40011000, status, 2) \
	fn(DT_N_S_soc_S_serial_40011000, status, 3) \
	fn(DT_N_S_soc_S_serial_40011000, status, 4) \
	fn(DT_N_S_soc_S_serial_40011000, status, 5) \
	fn(DT_N_S_soc_S_serial_40011000, status, 6) \
	fn(DT_N_S_soc_S_serial_40011000, status, 7)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011400
 *
 * Node identifier: DT_N_S_soc_S_serial_40011400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011400_PATH "/soc/serial@40011400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011400_FULL_NAME "serial@40011400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011400_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011400_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40011400
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40011400
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_40011400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011400_REG_NUM 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_ADDRESS 1073812480 /* 0x40011400 */
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011400_P_reg {1073812480 /* 0x40011400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0 1073812480
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011400, reg, 1)
#define DT_N_S_soc_S_serial_40011400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011400, interrupts, 1)
#define DT_N_S_soc_S_serial_40011400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_label "UART_6"
#define DT_N_S_soc_S_serial_40011400_P_label_STRING_TOKEN UART_6
#define DT_N_S_soc_S_serial_40011400_P_label_STRING_UPPER_TOKEN UART_6
#define DT_N_S_soc_S_serial_40011400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, label, 0) \
	fn(DT_N_S_soc_S_serial_40011400, label, 1) \
	fn(DT_N_S_soc_S_serial_40011400, label, 2) \
	fn(DT_N_S_soc_S_serial_40011400, label, 3) \
	fn(DT_N_S_soc_S_serial_40011400, label, 4) \
	fn(DT_N_S_soc_S_serial_40011400, label, 5)
#define DT_N_S_soc_S_serial_40011400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status "disabled"
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, status, 0) \
	fn(DT_N_S_soc_S_serial_40011400, status, 1) \
	fn(DT_N_S_soc_S_serial_40011400, status, 2) \
	fn(DT_N_S_soc_S_serial_40011400, status, 3) \
	fn(DT_N_S_soc_S_serial_40011400, status, 4) \
	fn(DT_N_S_soc_S_serial_40011400, status, 5) \
	fn(DT_N_S_soc_S_serial_40011400, status, 6) \
	fn(DT_N_S_soc_S_serial_40011400, status, 7)
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1)
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, clocks, 0)
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2      DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_UPPER_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, label, 0) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4)
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32_spi DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3      DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1)
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_label "SPI_3"
#define DT_N_S_soc_S_spi_40003c00_P_label_STRING_TOKEN SPI_3
#define DT_N_S_soc_S_spi_40003c00_P_label_STRING_UPPER_TOKEN SPI_3
#define DT_N_S_soc_S_spi_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, label, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 4)
#define DT_N_S_soc_S_spi_40003c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 4) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 5) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 6) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 7)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1      DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_UPPER_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, label, 0) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4)
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013400
 *
 * Node identifier: DT_N_S_soc_S_spi_40013400
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013400_PATH "/soc/spi@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013400_FULL_NAME "spi@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013400_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013400_EXISTS 1
#define DT_N_INST_3_st_stm32_spi DT_N_S_soc_S_spi_40013400
#define DT_N_NODELABEL_spi4      DT_N_S_soc_S_spi_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013400_REG_NUM 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013400, reg, 1)
#define DT_N_S_soc_S_spi_40013400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013400, interrupts, 1)
#define DT_N_S_soc_S_spi_40013400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_label "SPI_4"
#define DT_N_S_soc_S_spi_40013400_P_label_STRING_TOKEN SPI_4
#define DT_N_S_soc_S_spi_40013400_P_label_STRING_UPPER_TOKEN SPI_4
#define DT_N_S_soc_S_spi_40013400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, label, 0) \
	fn(DT_N_S_soc_S_spi_40013400, label, 1) \
	fn(DT_N_S_soc_S_spi_40013400, label, 2) \
	fn(DT_N_S_soc_S_spi_40013400, label, 3) \
	fn(DT_N_S_soc_S_spi_40013400, label, 4)
#define DT_N_S_soc_S_spi_40013400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status "disabled"
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, status, 0) \
	fn(DT_N_S_soc_S_spi_40013400, status, 1) \
	fn(DT_N_S_soc_S_spi_40013400, status, 2) \
	fn(DT_N_S_soc_S_spi_40013400, status, 3) \
	fn(DT_N_S_soc_S_spi_40013400, status, 4) \
	fn(DT_N_S_soc_S_spi_40013400, status, 5) \
	fn(DT_N_S_soc_S_spi_40013400, status, 6) \
	fn(DT_N_S_soc_S_spi_40013400, status, 7)
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, compatible, 0)
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, clocks, 0)
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015000
 *
 * Node identifier: DT_N_S_soc_S_spi_40015000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015000_PATH "/soc/spi@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015000_FULL_NAME "spi@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40015000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015000_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015000_EXISTS 1
#define DT_N_INST_4_st_stm32_spi DT_N_S_soc_S_spi_40015000
#define DT_N_NODELABEL_spi5      DT_N_S_soc_S_spi_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015000_REG_NUM 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40015000, reg, 1)
#define DT_N_S_soc_S_spi_40015000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40015000, interrupts, 1)
#define DT_N_S_soc_S_spi_40015000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_label "SPI_5"
#define DT_N_S_soc_S_spi_40015000_P_label_STRING_TOKEN SPI_5
#define DT_N_S_soc_S_spi_40015000_P_label_STRING_UPPER_TOKEN SPI_5
#define DT_N_S_soc_S_spi_40015000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, label, 0) \
	fn(DT_N_S_soc_S_spi_40015000, label, 1) \
	fn(DT_N_S_soc_S_spi_40015000, label, 2) \
	fn(DT_N_S_soc_S_spi_40015000, label, 3) \
	fn(DT_N_S_soc_S_spi_40015000, label, 4)
#define DT_N_S_soc_S_spi_40015000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status "disabled"
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, status, 0) \
	fn(DT_N_S_soc_S_spi_40015000, status, 1) \
	fn(DT_N_S_soc_S_spi_40015000, status, 2) \
	fn(DT_N_S_soc_S_spi_40015000, status, 3) \
	fn(DT_N_S_soc_S_spi_40015000, status, 4) \
	fn(DT_N_S_soc_S_spi_40015000, status, 5) \
	fn(DT_N_S_soc_S_spi_40015000, status, 6) \
	fn(DT_N_S_soc_S_spi_40015000, status, 7)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, compatible, 0)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	63, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otgfs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_label "OTGFS_PHY"
#define DT_N_S_otgfs_phy_P_label_STRING_TOKEN OTGFS_PHY
#define DT_N_S_otgfs_phy_P_label_STRING_UPPER_TOKEN OTGFS_PHY
#define DT_N_S_otgfs_phy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, label, 0) \
	fn(DT_N_S_otgfs_phy, label, 1) \
	fn(DT_N_S_otgfs_phy, label, 2) \
	fn(DT_N_S_otgfs_phy, label, 3) \
	fn(DT_N_S_otgfs_phy, label, 4) \
	fn(DT_N_S_otgfs_phy, label, 5) \
	fn(DT_N_S_otgfs_phy, label, 6) \
	fn(DT_N_S_otgfs_phy, label, 7) \
	fn(DT_N_S_otgfs_phy, label, 8)
#define DT_N_S_otgfs_phy_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, label, 0, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 1, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 2, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 3, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 4, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 5, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 6, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 7, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 8, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_label_EXISTS 1
#define DT_N_S_otgfs_phy_P_wakeup_source 0
#define DT_N_S_otgfs_phy_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PATH "/soc/pin-controller@40020000/usb_otg_fs_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FULL_NAME "usb_otg_fs_dm_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_SUPPORTS_ORDS \
	63, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dm_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux 2826
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PATH "/soc/pin-controller@40020000/usb_otg_fs_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FULL_NAME "usb_otg_fs_dp_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_SUPPORTS_ORDS \
	63, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dp_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux 3082
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/usb@50000000
 *
 * Node identifier: DT_N_S_soc_S_usb_50000000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_50000000_PATH "/soc/usb@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_50000000_FULL_NAME "usb@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_50000000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_50000000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /otgfs_phy */ \
	61, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	62, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_50000000_REG_NUM 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_usb_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_50000000_PINCTRL_IDX_0_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_usb_50000000_P_reg {1342177280 /* 0x50000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, reg, 0) \
	fn(DT_N_S_soc_S_usb_50000000, reg, 1)
#define DT_N_S_soc_S_usb_50000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_50000000, interrupts, 1)
#define DT_N_S_soc_S_usb_50000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_ram_size 1280
#define DT_N_S_soc_S_usb_50000000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0 DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, clocks, 0)
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints 4
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 9)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 9, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_label "OTGFS"
#define DT_N_S_soc_S_usb_50000000_P_label_STRING_TOKEN OTGFS
#define DT_N_S_soc_S_usb_50000000_P_label_STRING_UPPER_TOKEN OTGFS
#define DT_N_S_soc_S_usb_50000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, label, 0) \
	fn(DT_N_S_soc_S_usb_50000000, label, 1) \
	fn(DT_N_S_soc_S_usb_50000000, label, 2) \
	fn(DT_N_S_soc_S_usb_50000000, label, 3) \
	fn(DT_N_S_soc_S_usb_50000000, label, 4)
#define DT_N_S_soc_S_usb_50000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status "okay"
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, status, 0) \
	fn(DT_N_S_soc_S_usb_50000000, status, 1) \
	fn(DT_N_S_soc_S_usb_50000000, status, 2) \
	fn(DT_N_S_soc_S_usb_50000000, status, 3)
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, compatible, 0)
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_label "WWDG"
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_UPPER_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_label "IWDG"
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_UPPER_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 7)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_PATH "/soc/flash-controller@40023c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_FULL_NAME "flash-controller@40023c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) 
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_REQUIRES_ORDS \
	3, /* /soc */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_SUPPORTS_ORDS \
	67, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_INST_0_st_stm32f4_flash_controller DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40023c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_ADDRESS 1073888256 /* 0x40023c00 */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32f4_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_STRING_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_STRING_UPPER_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 9)
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg {1073888256 /* 0x40023c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0 1073888256
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible {"st,stm32-flash-controller", "st,stm32f4-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1 "st,stm32f4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PATH "/soc/flash-controller@40023c00/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40023c00) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REQUIRES_ORDS \
	66, /* /soc/flash-controller@40023c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time 4000
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_STRING_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_STRING_UPPER_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 10)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 10, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@40020000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_SUPPORTS_ORDS \
	70, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux 5636
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@40020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	70, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux 6404
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */ \
	68, /* /soc/pin-controller@40020000/i2c1_scl_pb6 */ \
	69, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	72, /* /soc/i2c@40005400/lsm303agr-accel@19 */ \
	73, /* /soc/i2c@40005400/lsm303agr-magn@1e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_UPPER_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4)
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PATH "/soc/pin-controller@40020000/gpio@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FULL_NAME "gpio@40021000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_SUPPORTS_ORDS \
	72, /* /soc/i2c@40005400/lsm303agr-accel@19 */ \
	73, /* /soc/i2c@40005400/lsm303agr-magn@1e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label "GPIOE"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_STRING_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_STRING_UPPER_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303agr-accel@19
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
 *
 * Binding (compatible = st,lis2dh):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis2dh-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PATH "/soc/i2c@40005400/lsm303agr-accel@19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FULL_NAME "lsm303agr-accel@19"

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PARENT DT_N_S_soc_S_i2c_40005400
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REQUIRES_ORDS \
	70, /* /soc/i2c@40005400 */ \
	71, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_EXISTS 1
#define DT_N_INST_0_st_lis2dh          DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
#define DT_N_INST_0_st_lsm303agr_accel DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19

/* Bus info (controller: '/soc/i2c@40005400', type: 'i2c') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_IDX_0_VAL_ADDRESS 25 /* 0x19 */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MATCHES_st_lis2dh 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MATCHES_st_lsm303agr_accel 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg {25 /* 0x19 */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_IDX_0 25
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, reg, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label "LSM303AGR-ACCEL"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label_STRING_TOKEN LSM303AGR_ACCEL
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label_STRING_UPPER_TOKEN LSM303AGR_ACCEL
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 4) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 5) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 6) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 7) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 8) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 9) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 10) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 11) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 12) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 13) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 14)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, label, 14, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 3)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible {"st,lis2dh", "st,lsm303agr-accel"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0 "st,lis2dh"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1 "st,lsm303agr-accel"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_pin 5
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_disconnect_sdo_sa0_pull_up 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_disconnect_sdo_sa0_pull_up_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303agr-magn@1e
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
 *
 * Binding (compatible = st,lis2mdl):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis2mdl-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PATH "/soc/i2c@40005400/lsm303agr-magn@1e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FULL_NAME "lsm303agr-magn@1e"

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PARENT DT_N_S_soc_S_i2c_40005400
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REQUIRES_ORDS \
	70, /* /soc/i2c@40005400 */ \
	71, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_EXISTS 1
#define DT_N_INST_0_st_lis2mdl        DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
#define DT_N_INST_0_st_lsm303agr_magn DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e

/* Bus info (controller: '/soc/i2c@40005400', type: 'i2c') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_IDX_0_VAL_ADDRESS 30 /* 0x1e */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MATCHES_st_lis2mdl 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MATCHES_st_lsm303agr_magn 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg {30 /* 0x1e */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_IDX_0 30
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, reg, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label "LSM303AGR-MAGN"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label_STRING_TOKEN LSM303AGR_MAGN
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label_STRING_UPPER_TOKEN LSM303AGR_MAGN
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 4) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 5) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 6) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 7) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 8) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 9) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 10) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 11) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 12) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 13)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, label, 13, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 3)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible {"st,lis2mdl", "st,lsm303agr-magn"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0 "st,lis2mdl"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1 "st,lsm303agr-magn"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_pin 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_single_mode 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_single_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_cancel_offset 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_cancel_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_spi_full_duplex 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_spi_full_duplex_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in0_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_PATH "/soc/pin-controller@40020000/adc1_in0_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FULL_NAME "adc1_in0_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_EXISTS 1
#define DT_N_NODELABEL_adc1_in0_pa0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in10_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_PATH "/soc/pin-controller@40020000/adc1_in10_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FULL_NAME "adc1_in10_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_EXISTS 1
#define DT_N_NODELABEL_adc1_in10_pc0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_pinmux 8208
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in11_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_PATH "/soc/pin-controller@40020000/adc1_in11_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FULL_NAME "adc1_in11_pc1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_EXISTS 1
#define DT_N_NODELABEL_adc1_in11_pc1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_pinmux 8464
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in12_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_PATH "/soc/pin-controller@40020000/adc1_in12_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FULL_NAME "adc1_in12_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_EXISTS 1
#define DT_N_NODELABEL_adc1_in12_pc2 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_pinmux 8720
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in13_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_PATH "/soc/pin-controller@40020000/adc1_in13_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FULL_NAME "adc1_in13_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_EXISTS 1
#define DT_N_NODELABEL_adc1_in13_pc3 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_pinmux 8976
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in14_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_PATH "/soc/pin-controller@40020000/adc1_in14_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FULL_NAME "adc1_in14_pc4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_EXISTS 1
#define DT_N_NODELABEL_adc1_in14_pc4 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_pinmux 9232
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in15_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_PATH "/soc/pin-controller@40020000/adc1_in15_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FULL_NAME "adc1_in15_pc5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_EXISTS 1
#define DT_N_NODELABEL_adc1_in15_pc5 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_pinmux 9488
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in1_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_PATH "/soc/pin-controller@40020000/adc1_in1_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FULL_NAME "adc1_in1_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_EXISTS 1
#define DT_N_NODELABEL_adc1_in1_pa1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in2_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_PATH "/soc/pin-controller@40020000/adc1_in2_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FULL_NAME "adc1_in2_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_EXISTS 1
#define DT_N_NODELABEL_adc1_in2_pa2 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in3_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_PATH "/soc/pin-controller@40020000/adc1_in3_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FULL_NAME "adc1_in3_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_EXISTS 1
#define DT_N_NODELABEL_adc1_in3_pa3 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in4_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_PATH "/soc/pin-controller@40020000/adc1_in4_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FULL_NAME "adc1_in4_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_EXISTS 1
#define DT_N_NODELABEL_adc1_in4_pa4 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in5_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_PATH "/soc/pin-controller@40020000/adc1_in5_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FULL_NAME "adc1_in5_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_EXISTS 1
#define DT_N_NODELABEL_adc1_in5_pa5 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_pinmux 1296
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in6_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_PATH "/soc/pin-controller@40020000/adc1_in6_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FULL_NAME "adc1_in6_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_EXISTS 1
#define DT_N_NODELABEL_adc1_in6_pa6 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_pinmux 1552
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in7_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_PATH "/soc/pin-controller@40020000/adc1_in7_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FULL_NAME "adc1_in7_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_EXISTS 1
#define DT_N_NODELABEL_adc1_in7_pa7 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_pinmux 1808
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in8_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_PATH "/soc/pin-controller@40020000/adc1_in8_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FULL_NAME "adc1_in8_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_EXISTS 1
#define DT_N_NODELABEL_adc1_in8_pb0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_pinmux 4112
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in9_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_PATH "/soc/pin-controller@40020000/adc1_in9_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FULL_NAME "adc1_in9_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_EXISTS 1
#define DT_N_NODELABEL_adc1_in9_pb1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_pinmux 4368
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PATH "/soc/pin-controller@40020000/gpio@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FULL_NAME "gpio@40020400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_STRING_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_STRING_UPPER_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PATH "/soc/pin-controller@40020000/gpio@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FULL_NAME "gpio@40020800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_STRING_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_STRING_UPPER_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PATH "/soc/pin-controller@40020000/gpio@40021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FULL_NAME "gpio@40021400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_ADDRESS 1073878016 /* 0x40021400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg {1073878016 /* 0x40021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0 1073878016
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label "GPIOF"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_STRING_TOKEN GPIOF
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_STRING_UPPER_TOKEN GPIOF
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PATH "/soc/pin-controller@40020000/gpio@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FULL_NAME "gpio@40021800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label "GPIOG"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_STRING_TOKEN GPIOG
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_STRING_UPPER_TOKEN GPIOG
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PATH "/soc/pin-controller@40020000/gpio@40021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FULL_NAME "gpio@40021c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_ADDRESS 1073880064 /* 0x40021c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg {1073880064 /* 0x40021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0 1073880064
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label "GPIOH"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_STRING_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_STRING_UPPER_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@40020000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux 6148
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_PATH "/soc/pin-controller@40020000/i2c1_sda_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FULL_NAME "i2c1_sda_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb7 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_pinmux 5892
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PATH "/soc/pin-controller@40020000/i2c2_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FULL_NAME "i2c2_scl_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pb10 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux 6660
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_sda_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_PATH "/soc/pin-controller@40020000/i2c2_sda_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_FULL_NAME "i2c2_sda_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pb3 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_pinmux 4873
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_PATH "/soc/pin-controller@40020000/i2c2_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_FULL_NAME "i2c2_sda_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_pinmux 6409
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_scl_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PATH "/soc/pin-controller@40020000/i2c3_scl_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FULL_NAME "i2c3_scl_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pa8 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux 2052
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_sda_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_PATH "/soc/pin-controller@40020000/i2c3_sda_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_FULL_NAME "i2c3_sda_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb4 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_pinmux 5129
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_sda_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_PATH "/soc/pin-controller@40020000/i2c3_sda_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_FULL_NAME "i2c3_sda_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pb8 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_pinmux 6153
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_sda_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PATH "/soc/pin-controller@40020000/i2c3_sda_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FULL_NAME "i2c3_sda_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc9 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux 10500
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_ck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_PATH "/soc/pin-controller@40020000/i2s1_ck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_FULL_NAME "i2s1_ck_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_EXISTS 1
#define DT_N_NODELABEL_i2s1_ck_pa5 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_pinmux 1285
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_ck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_PATH "/soc/pin-controller@40020000/i2s1_ck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_FULL_NAME "i2s1_ck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_EXISTS 1
#define DT_N_NODELABEL_i2s1_ck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_pinmux 4869
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_sd_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_PATH "/soc/pin-controller@40020000/i2s1_sd_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_FULL_NAME "i2s1_sd_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_EXISTS 1
#define DT_N_NODELABEL_i2s1_sd_pa7 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_pinmux 1797
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_sd_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_PATH "/soc/pin-controller@40020000/i2s1_sd_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_FULL_NAME "i2s1_sd_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_EXISTS 1
#define DT_N_NODELABEL_i2s1_sd_pb5 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_pinmux 5381
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_sd_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_ws_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_PATH "/soc/pin-controller@40020000/i2s1_ws_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_FULL_NAME "i2s1_ws_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_EXISTS 1
#define DT_N_NODELABEL_i2s1_ws_pa15 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_pinmux 3845
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s1_ws_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_PATH "/soc/pin-controller@40020000/i2s1_ws_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_FULL_NAME "i2s1_ws_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_EXISTS 1
#define DT_N_NODELABEL_i2s1_ws_pa4 DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_pinmux 1029
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s1_ws_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_PATH "/soc/pin-controller@40020000/i2s2_ck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FULL_NAME "i2s2_ck_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb10 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_PATH "/soc/pin-controller@40020000/i2s2_ck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FULL_NAME "i2s2_ck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_PATH "/soc/pin-controller@40020000/i2s2_ck_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_FULL_NAME "i2s2_ck_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pc7 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_pinmux 9989
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pd3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_PATH "/soc/pin-controller@40020000/i2s2_ck_pd3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_FULL_NAME "i2s2_ck_pd3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pd3 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_pinmux 13061
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pd3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_sd_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_PATH "/soc/pin-controller@40020000/i2s2_sd_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FULL_NAME "i2s2_sd_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pb15 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_sd_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_PATH "/soc/pin-controller@40020000/i2s2_sd_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FULL_NAME "i2s2_sd_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pc3 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ws_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_PATH "/soc/pin-controller@40020000/i2s2_ws_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FULL_NAME "i2s2_ws_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb12 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ws_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_PATH "/soc/pin-controller@40020000/i2s2_ws_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FULL_NAME "i2s2_ws_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ck_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_PATH "/soc/pin-controller@40020000/i2s3_ck_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_FULL_NAME "i2s3_ck_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_EXISTS 1
#define DT_N_NODELABEL_i2s3_ck_pb12 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_pinmux 7175
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_PATH "/soc/pin-controller@40020000/i2s3_ck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FULL_NAME "i2s3_ck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_EXISTS 1
#define DT_N_NODELABEL_i2s3_ck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_pinmux 4870
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ck_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_PATH "/soc/pin-controller@40020000/i2s3_ck_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FULL_NAME "i2s3_ck_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_EXISTS 1
#define DT_N_NODELABEL_i2s3_ck_pc10 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_pinmux 10758
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_sd_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_PATH "/soc/pin-controller@40020000/i2s3_sd_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FULL_NAME "i2s3_sd_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_EXISTS 1
#define DT_N_NODELABEL_i2s3_sd_pb5 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_pinmux 5382
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_sd_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_PATH "/soc/pin-controller@40020000/i2s3_sd_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FULL_NAME "i2s3_sd_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_EXISTS 1
#define DT_N_NODELABEL_i2s3_sd_pc12 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_pinmux 11270
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_sd_pd6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_PATH "/soc/pin-controller@40020000/i2s3_sd_pd6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_FULL_NAME "i2s3_sd_pd6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_EXISTS 1
#define DT_N_NODELABEL_i2s3_sd_pd6 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_pinmux 13829
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pd6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ws_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_PATH "/soc/pin-controller@40020000/i2s3_ws_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FULL_NAME "i2s3_ws_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_EXISTS 1
#define DT_N_NODELABEL_i2s3_ws_pa15 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_pinmux 3846
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ws_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_PATH "/soc/pin-controller@40020000/i2s3_ws_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FULL_NAME "i2s3_ws_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_EXISTS 1
#define DT_N_NODELABEL_i2s3_ws_pa4 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_pinmux 1030
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_PATH "/soc/pin-controller@40020000/i2s4_ck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_FULL_NAME "i2s4_ck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_EXISTS 1
#define DT_N_NODELABEL_i2s4_ck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_pinmux 7430
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ck_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_PATH "/soc/pin-controller@40020000/i2s4_ck_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_FULL_NAME "i2s4_ck_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_EXISTS 1
#define DT_N_NODELABEL_i2s4_ck_pe12 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_pinmux 19461
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ck_pe2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_PATH "/soc/pin-controller@40020000/i2s4_ck_pe2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_FULL_NAME "i2s4_ck_pe2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_EXISTS 1
#define DT_N_NODELABEL_i2s4_ck_pe2 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_pinmux 16901
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ck_pe2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_sd_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_PATH "/soc/pin-controller@40020000/i2s4_sd_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_FULL_NAME "i2s4_sd_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_EXISTS 1
#define DT_N_NODELABEL_i2s4_sd_pa1 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_pinmux 261
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_sd_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_PATH "/soc/pin-controller@40020000/i2s4_sd_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_FULL_NAME "i2s4_sd_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_EXISTS 1
#define DT_N_NODELABEL_i2s4_sd_pe14 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_pinmux 19973
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_sd_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_PATH "/soc/pin-controller@40020000/i2s4_sd_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_FULL_NAME "i2s4_sd_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_EXISTS 1
#define DT_N_NODELABEL_i2s4_sd_pe6 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_pinmux 17925
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_sd_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ws_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_PATH "/soc/pin-controller@40020000/i2s4_ws_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_FULL_NAME "i2s4_ws_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_EXISTS 1
#define DT_N_NODELABEL_i2s4_ws_pb12 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_pinmux 7174
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ws_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_PATH "/soc/pin-controller@40020000/i2s4_ws_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_FULL_NAME "i2s4_ws_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_EXISTS 1
#define DT_N_NODELABEL_i2s4_ws_pe11 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_pinmux 19205
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s4_ws_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_PATH "/soc/pin-controller@40020000/i2s4_ws_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_FULL_NAME "i2s4_ws_pe4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_EXISTS 1
#define DT_N_NODELABEL_i2s4_ws_pe4 DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_pinmux 17413
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s4_ws_pe4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ck_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_PATH "/soc/pin-controller@40020000/i2s5_ck_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_FULL_NAME "i2s5_ck_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_EXISTS 1
#define DT_N_NODELABEL_i2s5_ck_pb0 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_pinmux 4102
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ck_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_PATH "/soc/pin-controller@40020000/i2s5_ck_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_FULL_NAME "i2s5_ck_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_EXISTS 1
#define DT_N_NODELABEL_i2s5_ck_pe12 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_pinmux 19462
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ck_pe2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_PATH "/soc/pin-controller@40020000/i2s5_ck_pe2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_FULL_NAME "i2s5_ck_pe2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_EXISTS 1
#define DT_N_NODELABEL_i2s5_ck_pe2 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_pinmux 16902
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ck_pe2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_sd_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_PATH "/soc/pin-controller@40020000/i2s5_sd_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_FULL_NAME "i2s5_sd_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_EXISTS 1
#define DT_N_NODELABEL_i2s5_sd_pa10 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_pinmux 2566
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_sd_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_PATH "/soc/pin-controller@40020000/i2s5_sd_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_FULL_NAME "i2s5_sd_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_EXISTS 1
#define DT_N_NODELABEL_i2s5_sd_pb8 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_pinmux 6150
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_sd_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_PATH "/soc/pin-controller@40020000/i2s5_sd_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_FULL_NAME "i2s5_sd_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_EXISTS 1
#define DT_N_NODELABEL_i2s5_sd_pe14 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_pinmux 19974
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_sd_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_PATH "/soc/pin-controller@40020000/i2s5_sd_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_FULL_NAME "i2s5_sd_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_EXISTS 1
#define DT_N_NODELABEL_i2s5_sd_pe6 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_pinmux 17926
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_sd_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ws_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_PATH "/soc/pin-controller@40020000/i2s5_ws_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_FULL_NAME "i2s5_ws_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_EXISTS 1
#define DT_N_NODELABEL_i2s5_ws_pb1 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_pinmux 4358
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ws_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_PATH "/soc/pin-controller@40020000/i2s5_ws_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_FULL_NAME "i2s5_ws_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_EXISTS 1
#define DT_N_NODELABEL_i2s5_ws_pe11 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_pinmux 19206
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s5_ws_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_PATH "/soc/pin-controller@40020000/i2s5_ws_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_FULL_NAME "i2s5_ws_pe4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_EXISTS 1
#define DT_N_NODELABEL_i2s5_ws_pe4 DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_pinmux 17414
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s5_ws_pe4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_ck_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_PATH "/soc/pin-controller@40020000/sdio_ck_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_FULL_NAME "sdio_ck_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_EXISTS 1
#define DT_N_NODELABEL_sdio_ck_pb15 DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_pinmux 7948
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_ck_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_PATH "/soc/pin-controller@40020000/sdio_ck_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_FULL_NAME "sdio_ck_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_EXISTS 1
#define DT_N_NODELABEL_sdio_ck_pc12 DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_pinmux 11276
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_ck_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_cmd_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_PATH "/soc/pin-controller@40020000/sdio_cmd_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_FULL_NAME "sdio_cmd_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_EXISTS 1
#define DT_N_NODELABEL_sdio_cmd_pa6 DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_pinmux 1548
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_cmd_pd2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_PATH "/soc/pin-controller@40020000/sdio_cmd_pd2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_FULL_NAME "sdio_cmd_pd2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_EXISTS 1
#define DT_N_NODELABEL_sdio_cmd_pd2 DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_pinmux 12812
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_cmd_pd2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d0_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_PATH "/soc/pin-controller@40020000/sdio_d0_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_FULL_NAME "sdio_d0_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_EXISTS 1
#define DT_N_NODELABEL_sdio_d0_pb4 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_pinmux 5132
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d0_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_PATH "/soc/pin-controller@40020000/sdio_d0_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_FULL_NAME "sdio_d0_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_EXISTS 1
#define DT_N_NODELABEL_sdio_d0_pb7 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_pinmux 5900
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d0_pc8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_PATH "/soc/pin-controller@40020000/sdio_d0_pc8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_FULL_NAME "sdio_d0_pc8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_EXISTS 1
#define DT_N_NODELABEL_sdio_d0_pc8 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_pinmux 10252
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d0_pc8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_PATH "/soc/pin-controller@40020000/sdio_d1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_FULL_NAME "sdio_d1_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_EXISTS 1
#define DT_N_NODELABEL_sdio_d1_pa8 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_pinmux 2060
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d1_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_PATH "/soc/pin-controller@40020000/sdio_d1_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_FULL_NAME "sdio_d1_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_EXISTS 1
#define DT_N_NODELABEL_sdio_d1_pc9 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_pinmux 10508
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d1_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d2_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_PATH "/soc/pin-controller@40020000/sdio_d2_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_FULL_NAME "sdio_d2_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_EXISTS 1
#define DT_N_NODELABEL_sdio_d2_pa9 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_pinmux 2316
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d2_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_PATH "/soc/pin-controller@40020000/sdio_d2_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_FULL_NAME "sdio_d2_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_EXISTS 1
#define DT_N_NODELABEL_sdio_d2_pc10 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_pinmux 10764
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d2_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d3_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_PATH "/soc/pin-controller@40020000/sdio_d3_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_FULL_NAME "sdio_d3_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_EXISTS 1
#define DT_N_NODELABEL_sdio_d3_pb5 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_pinmux 5388
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d3_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_PATH "/soc/pin-controller@40020000/sdio_d3_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_FULL_NAME "sdio_d3_pc11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_EXISTS 1
#define DT_N_NODELABEL_sdio_d3_pc11 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_pinmux 11020
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d3_pc11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d4_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_PATH "/soc/pin-controller@40020000/sdio_d4_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_FULL_NAME "sdio_d4_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_EXISTS 1
#define DT_N_NODELABEL_sdio_d4_pb8 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_pinmux 6156
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d4_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d5_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_PATH "/soc/pin-controller@40020000/sdio_d5_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_FULL_NAME "sdio_d5_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_EXISTS 1
#define DT_N_NODELABEL_sdio_d5_pb9 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_pinmux 6412
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d5_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d6_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_PATH "/soc/pin-controller@40020000/sdio_d6_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_FULL_NAME "sdio_d6_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_EXISTS 1
#define DT_N_NODELABEL_sdio_d6_pb14 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_pinmux 7692
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d6_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_PATH "/soc/pin-controller@40020000/sdio_d6_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_FULL_NAME "sdio_d6_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_EXISTS 1
#define DT_N_NODELABEL_sdio_d6_pc6 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_pinmux 9740
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d6_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d7_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_PATH "/soc/pin-controller@40020000/sdio_d7_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_FULL_NAME "sdio_d7_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_EXISTS 1
#define DT_N_NODELABEL_sdio_d7_pb10 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_pinmux 6668
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/sdio_d7_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_PATH "/soc/pin-controller@40020000/sdio_d7_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_FULL_NAME "sdio_d7_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_EXISTS 1
#define DT_N_NODELABEL_sdio_d7_pc7 DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_pinmux 9996
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_sdio_d7_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_PATH "/soc/pin-controller@40020000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_pinmux 1541
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_PATH "/soc/pin-controller@40020000/spi1_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FULL_NAME "spi1_miso_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pb4 DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_pinmux 5125
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@40020000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_pinmux 1797
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@40020000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_pinmux 5381
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_PATH "/soc/pin-controller@40020000/spi1_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FULL_NAME "spi1_nss_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_ORD 168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa15 DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_pinmux 3845
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_PATH "/soc/pin-controller@40020000/spi1_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FULL_NAME "spi1_nss_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_ORD 169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa4 DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_pinmux 1029
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_PATH "/soc/pin-controller@40020000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_ORD 170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_pinmux 1285
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_PATH "/soc/pin-controller@40020000/spi1_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FULL_NAME "spi1_sck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_ORD 171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_pinmux 4869
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_miso_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_PATH "/soc/pin-controller@40020000/spi2_miso_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FULL_NAME "spi2_miso_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_ORD 172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pb14 DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_pinmux 7685
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_miso_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_PATH "/soc/pin-controller@40020000/spi2_miso_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FULL_NAME "spi2_miso_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_ORD 173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pc2 DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_pinmux 8709
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_mosi_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_PATH "/soc/pin-controller@40020000/spi2_mosi_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FULL_NAME "spi2_mosi_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_ORD 174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pb15 DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_mosi_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_PATH "/soc/pin-controller@40020000/spi2_mosi_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FULL_NAME "spi2_mosi_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_ORD 175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc3 DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_PATH "/soc/pin-controller@40020000/spi2_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FULL_NAME "spi2_nss_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_ORD 176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb12 DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_nss_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_PATH "/soc/pin-controller@40020000/spi2_nss_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FULL_NAME "spi2_nss_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_ORD 177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb9 DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_PATH "/soc/pin-controller@40020000/spi2_sck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FULL_NAME "spi2_sck_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_ORD 178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb10 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_PATH "/soc/pin-controller@40020000/spi2_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FULL_NAME "spi2_sck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_ORD 179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_PATH "/soc/pin-controller@40020000/spi2_sck_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_FULL_NAME "spi2_sck_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_ORD 180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pc7 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_pinmux 9989
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pd3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_PATH "/soc/pin-controller@40020000/spi2_sck_pd3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_FULL_NAME "spi2_sck_pd3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_ORD 181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pd3 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_pinmux 13061
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pd3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_PATH "/soc/pin-controller@40020000/spi3_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FULL_NAME "spi3_miso_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_ORD 182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi3_miso_pb4 DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_pinmux 5126
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_miso_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_PATH "/soc/pin-controller@40020000/spi3_miso_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FULL_NAME "spi3_miso_pc11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_ORD 183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_EXISTS 1
#define DT_N_NODELABEL_spi3_miso_pc11 DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_pinmux 11014
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_PATH "/soc/pin-controller@40020000/spi3_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FULL_NAME "spi3_mosi_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_ORD 184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pb5 DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_pinmux 5382
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_mosi_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_PATH "/soc/pin-controller@40020000/spi3_mosi_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FULL_NAME "spi3_mosi_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_ORD 185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pc12 DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_pinmux 11270
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_mosi_pd6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_PATH "/soc/pin-controller@40020000/spi3_mosi_pd6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_FULL_NAME "spi3_mosi_pd6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_ORD 186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pd6 DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_pinmux 13829
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pd6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_PATH "/soc/pin-controller@40020000/spi3_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FULL_NAME "spi3_nss_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_ORD 187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi3_nss_pa15 DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_pinmux 3846
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_PATH "/soc/pin-controller@40020000/spi3_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FULL_NAME "spi3_nss_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_ORD 188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi3_nss_pa4 DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_pinmux 1030
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_sck_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_PATH "/soc/pin-controller@40020000/spi3_sck_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_FULL_NAME "spi3_sck_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_ORD 189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pb12 DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_pinmux 7175
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_PATH "/soc/pin-controller@40020000/spi3_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FULL_NAME "spi3_sck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_ORD 190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_pinmux 4870
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_sck_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_PATH "/soc/pin-controller@40020000/spi3_sck_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FULL_NAME "spi3_sck_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_ORD 191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pc10 DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_pinmux 10758
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_miso_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_PATH "/soc/pin-controller@40020000/spi4_miso_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_FULL_NAME "spi4_miso_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_ORD 192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_EXISTS 1
#define DT_N_NODELABEL_spi4_miso_pa11 DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_pinmux 2822
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_miso_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_PATH "/soc/pin-controller@40020000/spi4_miso_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_FULL_NAME "spi4_miso_pe13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_ORD 193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_EXISTS 1
#define DT_N_NODELABEL_spi4_miso_pe13 DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_pinmux 19717
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_miso_pe5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_PATH "/soc/pin-controller@40020000/spi4_miso_pe5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_FULL_NAME "spi4_miso_pe5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_ORD 194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_EXISTS 1
#define DT_N_NODELABEL_spi4_miso_pe5 DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_pinmux 17669
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_miso_pe5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_mosi_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_PATH "/soc/pin-controller@40020000/spi4_mosi_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_FULL_NAME "spi4_mosi_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_ORD 195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_EXISTS 1
#define DT_N_NODELABEL_spi4_mosi_pa1 DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_pinmux 261
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_mosi_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_PATH "/soc/pin-controller@40020000/spi4_mosi_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_FULL_NAME "spi4_mosi_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_ORD 196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_EXISTS 1
#define DT_N_NODELABEL_spi4_mosi_pe14 DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_pinmux 19973
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_mosi_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_PATH "/soc/pin-controller@40020000/spi4_mosi_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_FULL_NAME "spi4_mosi_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_ORD 197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_EXISTS 1
#define DT_N_NODELABEL_spi4_mosi_pe6 DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_pinmux 17925
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_mosi_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_PATH "/soc/pin-controller@40020000/spi4_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_FULL_NAME "spi4_nss_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_ORD 198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi4_nss_pb12 DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_pinmux 7174
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_nss_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_PATH "/soc/pin-controller@40020000/spi4_nss_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_FULL_NAME "spi4_nss_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_ORD 199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_EXISTS 1
#define DT_N_NODELABEL_spi4_nss_pe11 DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_pinmux 19205
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_nss_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_PATH "/soc/pin-controller@40020000/spi4_nss_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_FULL_NAME "spi4_nss_pe4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_ORD 200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_EXISTS 1
#define DT_N_NODELABEL_spi4_nss_pe4 DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_pinmux 17413
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_nss_pe4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_PATH "/soc/pin-controller@40020000/spi4_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_FULL_NAME "spi4_sck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_ORD 201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi4_sck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_pinmux 7430
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_sck_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_PATH "/soc/pin-controller@40020000/spi4_sck_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_FULL_NAME "spi4_sck_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_ORD 202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_EXISTS 1
#define DT_N_NODELABEL_spi4_sck_pe12 DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_pinmux 19461
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi4_sck_pe2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_PATH "/soc/pin-controller@40020000/spi4_sck_pe2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_FULL_NAME "spi4_sck_pe2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_ORD 203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_EXISTS 1
#define DT_N_NODELABEL_spi4_sck_pe2 DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_pinmux 16901
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi4_sck_pe2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_miso_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_PATH "/soc/pin-controller@40020000/spi5_miso_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_FULL_NAME "spi5_miso_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_ORD 204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_EXISTS 1
#define DT_N_NODELABEL_spi5_miso_pa12 DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_pinmux 3078
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_miso_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_PATH "/soc/pin-controller@40020000/spi5_miso_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_FULL_NAME "spi5_miso_pe13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_ORD 205

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_EXISTS 1
#define DT_N_NODELABEL_spi5_miso_pe13 DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_pinmux 19718
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_miso_pe5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_PATH "/soc/pin-controller@40020000/spi5_miso_pe5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_FULL_NAME "spi5_miso_pe5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_ORD 206

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_EXISTS 1
#define DT_N_NODELABEL_spi5_miso_pe5 DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_pinmux 17670
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pe5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_mosi_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_PATH "/soc/pin-controller@40020000/spi5_mosi_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_FULL_NAME "spi5_mosi_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_ORD 207

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pa10 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_pinmux 2566
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_mosi_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_PATH "/soc/pin-controller@40020000/spi5_mosi_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_FULL_NAME "spi5_mosi_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_ORD 208

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pb8 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_pinmux 6150
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_mosi_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_PATH "/soc/pin-controller@40020000/spi5_mosi_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_FULL_NAME "spi5_mosi_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_ORD 209

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pe14 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_pinmux 19974
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_mosi_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_PATH "/soc/pin-controller@40020000/spi5_mosi_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_FULL_NAME "spi5_mosi_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_ORD 210

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pe6 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_pinmux 17926
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_nss_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_PATH "/soc/pin-controller@40020000/spi5_nss_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_FULL_NAME "spi5_nss_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_ORD 211

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_EXISTS 1
#define DT_N_NODELABEL_spi5_nss_pb1 DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_pinmux 4358
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_nss_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_PATH "/soc/pin-controller@40020000/spi5_nss_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_FULL_NAME "spi5_nss_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_ORD 212

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_EXISTS 1
#define DT_N_NODELABEL_spi5_nss_pe11 DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_pinmux 19206
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_nss_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_PATH "/soc/pin-controller@40020000/spi5_nss_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_FULL_NAME "spi5_nss_pe4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_ORD 213

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_EXISTS 1
#define DT_N_NODELABEL_spi5_nss_pe4 DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_pinmux 17414
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pe4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_sck_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_PATH "/soc/pin-controller@40020000/spi5_sck_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_FULL_NAME "spi5_sck_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_ORD 214

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_EXISTS 1
#define DT_N_NODELABEL_spi5_sck_pb0 DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_pinmux 4102
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_sck_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_PATH "/soc/pin-controller@40020000/spi5_sck_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_FULL_NAME "spi5_sck_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_ORD 215

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_EXISTS 1
#define DT_N_NODELABEL_spi5_sck_pe12 DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_pinmux 19462
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_sck_pe2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_PATH "/soc/pin-controller@40020000/spi5_sck_pe2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_FULL_NAME "spi5_sck_pe2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_ORD 216

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_EXISTS 1
#define DT_N_NODELABEL_spi5_sck_pe2 DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_pinmux 16902
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pe2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim10_ch1_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_PATH "/soc/pin-controller@40020000/tim10_ch1_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FULL_NAME "tim10_ch1_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_ORD 217

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_EXISTS 1
#define DT_N_NODELABEL_tim10_ch1_pb8 DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_pinmux 6147
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim11_ch1_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_PATH "/soc/pin-controller@40020000/tim11_ch1_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FULL_NAME "tim11_ch1_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_ORD 218

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_EXISTS 1
#define DT_N_NODELABEL_tim11_ch1_pb9 DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_pinmux 6403
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_PATH "/soc/pin-controller@40020000/tim1_ch1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FULL_NAME "tim1_ch1_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_ORD 219

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pa8 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_pinmux 2049
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1_pe9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_PATH "/soc/pin-controller@40020000/tim1_ch1_pe9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FULL_NAME "tim1_ch1_pe9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_ORD 220

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pe9 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_pinmux 18689
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_PATH "/soc/pin-controller@40020000/tim1_ch1n_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FULL_NAME "tim1_ch1n_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_ORD 221

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_pinmux 1793
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_PATH "/soc/pin-controller@40020000/tim1_ch1n_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FULL_NAME "tim1_ch1n_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_ORD 222

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pb13 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_pinmux 7425
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pe8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_PATH "/soc/pin-controller@40020000/tim1_ch1n_pe8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FULL_NAME "tim1_ch1n_pe8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_ORD 223

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pe8 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_pinmux 18433
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_PATH "/soc/pin-controller@40020000/tim1_ch2_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FULL_NAME "tim1_ch2_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_ORD 224

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pa9 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_pinmux 2305
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_PATH "/soc/pin-controller@40020000/tim1_ch2_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FULL_NAME "tim1_ch2_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_ORD 225

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pe11 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_pinmux 19201
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_PATH "/soc/pin-controller@40020000/tim1_ch2n_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FULL_NAME "tim1_ch2n_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_ORD 226

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb0 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_pinmux 4097
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_PATH "/soc/pin-controller@40020000/tim1_ch2n_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FULL_NAME "tim1_ch2n_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_ORD 227

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb14 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_pinmux 7681
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pe10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_PATH "/soc/pin-controller@40020000/tim1_ch2n_pe10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FULL_NAME "tim1_ch2n_pe10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_ORD 228

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pe10 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_pinmux 18945
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_PATH "/soc/pin-controller@40020000/tim1_ch3_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FULL_NAME "tim1_ch3_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_ORD 229

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pa10 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_pinmux 2561
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_PATH "/soc/pin-controller@40020000/tim1_ch3_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FULL_NAME "tim1_ch3_pe13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_ORD 230

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pe13 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_pinmux 19713
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_PATH "/soc/pin-controller@40020000/tim1_ch3n_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FULL_NAME "tim1_ch3n_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_ORD 231

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb1 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_pinmux 4353
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_PATH "/soc/pin-controller@40020000/tim1_ch3n_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FULL_NAME "tim1_ch3n_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_ORD 232

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb15 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_pinmux 7937
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_PATH "/soc/pin-controller@40020000/tim1_ch3n_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FULL_NAME "tim1_ch3n_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_ORD 233

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pe12 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_pinmux 19457
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch4_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_PATH "/soc/pin-controller@40020000/tim1_ch4_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FULL_NAME "tim1_ch4_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_ORD 234

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pa11 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_pinmux 2817
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch4_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_PATH "/soc/pin-controller@40020000/tim1_ch4_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FULL_NAME "tim1_ch4_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_ORD 235

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pe14 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_pinmux 19969
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_PATH "/soc/pin-controller@40020000/tim2_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FULL_NAME "tim2_ch1_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_ORD 236

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa0 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_pinmux 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_PATH "/soc/pin-controller@40020000/tim2_ch1_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FULL_NAME "tim2_ch1_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_ORD 237

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa15 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_pinmux 3841
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_PATH "/soc/pin-controller@40020000/tim2_ch1_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FULL_NAME "tim2_ch1_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_ORD 238

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa5 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_pinmux 1281
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_PATH "/soc/pin-controller@40020000/tim2_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FULL_NAME "tim2_ch2_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_ORD 239

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pa1 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_pinmux 257
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch2_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_PATH "/soc/pin-controller@40020000/tim2_ch2_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FULL_NAME "tim2_ch2_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_ORD 240

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pb3 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_pinmux 4865
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_PATH "/soc/pin-controller@40020000/tim2_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FULL_NAME "tim2_ch3_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_ORD 241

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_pinmux 513
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch3_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_PATH "/soc/pin-controller@40020000/tim2_ch3_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FULL_NAME "tim2_ch3_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_ORD 242

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pb10 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_pinmux 6657
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_PATH "/soc/pin-controller@40020000/tim2_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FULL_NAME "tim2_ch4_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_ORD 243

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_pinmux 769
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_PATH "/soc/pin-controller@40020000/tim3_ch1_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FULL_NAME "tim3_ch1_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_ORD 244

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pa6 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_pinmux 1538
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_PATH "/soc/pin-controller@40020000/tim3_ch1_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FULL_NAME "tim3_ch1_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_ORD 245

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pb4 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_pinmux 5122
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_PATH "/soc/pin-controller@40020000/tim3_ch1_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FULL_NAME "tim3_ch1_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_ORD 246

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pc6 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_pinmux 9730
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_PATH "/soc/pin-controller@40020000/tim3_ch2_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FULL_NAME "tim3_ch2_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_ORD 247

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_pinmux 1794
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_PATH "/soc/pin-controller@40020000/tim3_ch2_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FULL_NAME "tim3_ch2_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_ORD 248

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pb5 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_pinmux 5378
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_PATH "/soc/pin-controller@40020000/tim3_ch2_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FULL_NAME "tim3_ch2_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_ORD 249

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pc7 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_pinmux 9986
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch3_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_PATH "/soc/pin-controller@40020000/tim3_ch3_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FULL_NAME "tim3_ch3_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_ORD 250

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_EXISTS 1
#define DT_N_NODELABEL_tim3_ch3_pb0 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_pinmux 4098
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch3_pc8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_PATH "/soc/pin-controller@40020000/tim3_ch3_pc8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FULL_NAME "tim3_ch3_pc8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_ORD 251

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_EXISTS 1
#define DT_N_NODELABEL_tim3_ch3_pc8 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_pinmux 10242
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch4_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_PATH "/soc/pin-controller@40020000/tim3_ch4_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FULL_NAME "tim3_ch4_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_ORD 252

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_EXISTS 1
#define DT_N_NODELABEL_tim3_ch4_pb1 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_pinmux 4354
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch4_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_PATH "/soc/pin-controller@40020000/tim3_ch4_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FULL_NAME "tim3_ch4_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_ORD 253

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_EXISTS 1
#define DT_N_NODELABEL_tim3_ch4_pc9 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_pinmux 10498
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch1_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_PATH "/soc/pin-controller@40020000/tim4_ch1_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FULL_NAME "tim4_ch1_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_ORD 254

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pb6 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_pinmux 5634
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch2_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_PATH "/soc/pin-controller@40020000/tim4_ch2_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FULL_NAME "tim4_ch2_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_ORD 255

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_EXISTS 1
#define DT_N_NODELABEL_tim4_ch2_pb7 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_pinmux 5890
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch3_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_PATH "/soc/pin-controller@40020000/tim4_ch3_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FULL_NAME "tim4_ch3_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_ORD 256

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_EXISTS 1
#define DT_N_NODELABEL_tim4_ch3_pb8 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_pinmux 6146
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch4_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_PATH "/soc/pin-controller@40020000/tim4_ch4_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FULL_NAME "tim4_ch4_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_ORD 257

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_EXISTS 1
#define DT_N_NODELABEL_tim4_ch4_pb9 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_pinmux 6402
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_PATH "/soc/pin-controller@40020000/tim5_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FULL_NAME "tim5_ch1_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_ORD 258

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim5_ch1_pa0 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_pinmux 2
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_PATH "/soc/pin-controller@40020000/tim5_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FULL_NAME "tim5_ch2_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_ORD 259

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim5_ch2_pa1 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_pinmux 258
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_PATH "/soc/pin-controller@40020000/tim5_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FULL_NAME "tim5_ch3_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_ORD 260

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim5_ch3_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_pinmux 514
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_PATH "/soc/pin-controller@40020000/tim5_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FULL_NAME "tim5_ch4_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_ORD 261

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim5_ch4_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_pinmux 770
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch1_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_PATH "/soc/pin-controller@40020000/tim9_ch1_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FULL_NAME "tim9_ch1_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_ORD 262

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_EXISTS 1
#define DT_N_NODELABEL_tim9_ch1_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_pinmux 515
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch1_pe5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_PATH "/soc/pin-controller@40020000/tim9_ch1_pe5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FULL_NAME "tim9_ch1_pe5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_ORD 263

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_EXISTS 1
#define DT_N_NODELABEL_tim9_ch1_pe5 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_pinmux 17667
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch2_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_PATH "/soc/pin-controller@40020000/tim9_ch2_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FULL_NAME "tim9_ch2_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_ORD 264

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_EXISTS 1
#define DT_N_NODELABEL_tim9_ch2_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_pinmux 771
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch2_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_PATH "/soc/pin-controller@40020000/tim9_ch2_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FULL_NAME "tim9_ch2_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_ORD 265

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_EXISTS 1
#define DT_N_NODELABEL_tim9_ch2_pe6 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_pinmux 17923
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_cts_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_PATH "/soc/pin-controller@40020000/usart1_cts_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FULL_NAME "usart1_cts_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_ORD 266

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_pinmux 2823
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rts_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_PATH "/soc/pin-controller@40020000/usart1_rts_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FULL_NAME "usart1_rts_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_ORD 267

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_pinmux 3079
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PATH "/soc/pin-controller@40020000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_ORD 268

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux 2567
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_PATH "/soc/pin-controller@40020000/usart1_rx_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_FULL_NAME "usart1_rx_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_ORD 269

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb3 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_pinmux 4871
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_PATH "/soc/pin-controller@40020000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_ORD 270

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_pinmux 5895
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_PATH "/soc/pin-controller@40020000/usart1_tx_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_FULL_NAME "usart1_tx_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_ORD 271

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa15 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_pinmux 3847
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PATH "/soc/pin-controller@40020000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_ORD 272

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux 2311
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_PATH "/soc/pin-controller@40020000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_ORD 273

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_pinmux 5639
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_cts_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_PATH "/soc/pin-controller@40020000/usart2_cts_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FULL_NAME "usart2_cts_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_ORD 274

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_EXISTS 1
#define DT_N_NODELABEL_usart2_cts_pa0 DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_pinmux 7
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_cts_pd3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_PATH "/soc/pin-controller@40020000/usart2_cts_pd3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FULL_NAME "usart2_cts_pd3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_ORD 275

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_EXISTS 1
#define DT_N_NODELABEL_usart2_cts_pd3 DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_pinmux 13063
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rts_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_PATH "/soc/pin-controller@40020000/usart2_rts_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FULL_NAME "usart2_rts_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_ORD 276

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_EXISTS 1
#define DT_N_NODELABEL_usart2_rts_pa1 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_pinmux 263
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rts_pd4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_PATH "/soc/pin-controller@40020000/usart2_rts_pd4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FULL_NAME "usart2_rts_pd4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_ORD 277

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_EXISTS 1
#define DT_N_NODELABEL_usart2_rts_pd4 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_pinmux 13319
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rx_pd6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_PATH "/soc/pin-controller@40020000/usart2_rx_pd6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FULL_NAME "usart2_rx_pd6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_ORD 278

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pd6 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_pinmux 13831
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_tx_pd5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_PATH "/soc/pin-controller@40020000/usart2_tx_pd5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FULL_NAME "usart2_tx_pd5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_ORD 279

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pd5 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_pinmux 13575
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rx_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_PATH "/soc/pin-controller@40020000/usart6_rx_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_FULL_NAME "usart6_rx_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_ORD 280

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_EXISTS 1
#define DT_N_NODELABEL_usart6_rx_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_pinmux 3080
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rx_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_PATH "/soc/pin-controller@40020000/usart6_rx_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FULL_NAME "usart6_rx_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_ORD 281

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_EXISTS 1
#define DT_N_NODELABEL_usart6_rx_pc7 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_pinmux 9992
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_tx_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_PATH "/soc/pin-controller@40020000/usart6_tx_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_FULL_NAME "usart6_tx_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_ORD 282

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_EXISTS 1
#define DT_N_NODELABEL_usart6_tx_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_pinmux 2824
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_tx_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_PATH "/soc/pin-controller@40020000/usart6_tx_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FULL_NAME "usart6_tx_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_ORD 283

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_EXISTS 1
#define DT_N_NODELABEL_usart6_tx_pc6 DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_pinmux 9736
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_id_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_PATH "/soc/pin-controller@40020000/usb_otg_fs_id_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FULL_NAME "usb_otg_fs_id_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_ORD 284

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_id_pa10 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_pinmux 2570
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_sof_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_PATH "/soc/pin-controller@40020000/usb_otg_fs_sof_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FULL_NAME "usb_otg_fs_sof_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_ORD 285

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_sof_pa8 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_pinmux 2058
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_PATH "/soc/pin-controller@40020000/usb_otg_fs_vbus_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FULL_NAME "usb_otg_fs_vbus_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_ORD 286

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_REQUIRES_ORDS \
	4, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_vbus_pa9 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_pinmux 2314
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 287

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	288, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_label "TIMERS_2"
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_UPPER_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7)
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000, status, 7)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 288

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	287, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 289

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	290, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_label "TIMERS_3"
#define DT_N_S_soc_S_timers_40000400_P_label_STRING_TOKEN TIMERS_3
#define DT_N_S_soc_S_timers_40000400_P_label_STRING_UPPER_TOKEN TIMERS_3
#define DT_N_S_soc_S_timers_40000400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400, label, 4) \
	fn(DT_N_S_soc_S_timers_40000400, label, 5) \
	fn(DT_N_S_soc_S_timers_40000400, label, 6) \
	fn(DT_N_S_soc_S_timers_40000400, label, 7)
#define DT_N_S_soc_S_timers_40000400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1)
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 290

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	289, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label "PWM_3"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_STRING_TOKEN PWM_3
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_3
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 291

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	292, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_label "TIMERS_5"
#define DT_N_S_soc_S_timers_40000c00_P_label_STRING_TOKEN TIMERS_5
#define DT_N_S_soc_S_timers_40000c00_P_label_STRING_UPPER_TOKEN TIMERS_5
#define DT_N_S_soc_S_timers_40000c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 7)
#define DT_N_S_soc_S_timers_40000c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1)
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 292

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	291, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label "PWM_5"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_STRING_TOKEN PWM_5
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_STRING_UPPER_TOKEN PWM_5
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_PATH "/soc/timers@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_FULL_NAME "timers@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_ORD 293

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_SUPPORTS_ORDS \
	294, /* /soc/timers@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40010000
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_REG_NUM 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_P_label "TIMERS_1"
#define DT_N_S_soc_S_timers_40010000_P_label_STRING_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40010000_P_label_STRING_UPPER_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000, label, 4) \
	fn(DT_N_S_soc_S_timers_40010000, label, 5) \
	fn(DT_N_S_soc_S_timers_40010000, label, 6) \
	fn(DT_N_S_soc_S_timers_40010000, label, 7)
#define DT_N_S_soc_S_timers_40010000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40010000, reg, 1)
#define DT_N_S_soc_S_timers_40010000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, clocks, 0)
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 7)
#define DT_N_S_soc_S_timers_40010000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000, status, 7)
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PATH "/soc/timers@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010000) identifier: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PARENT DT_N_S_soc_S_timers_40010000
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_ORD 294

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REQUIRES_ORDS \
	293, /* /soc/timers@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40010000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_STRING_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 295

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	296, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers9      DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_label "TIMERS_9"
#define DT_N_S_soc_S_timers_40014000_P_label_STRING_TOKEN TIMERS_9
#define DT_N_S_soc_S_timers_40014000_P_label_STRING_UPPER_TOKEN TIMERS_9
#define DT_N_S_soc_S_timers_40014000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000, label, 4) \
	fn(DT_N_S_soc_S_timers_40014000, label, 5) \
	fn(DT_N_S_soc_S_timers_40014000, label, 6) \
	fn(DT_N_S_soc_S_timers_40014000, label, 7)
#define DT_N_S_soc_S_timers_40014000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1)
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 296

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	295, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label "PWM_9"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_STRING_TOKEN PWM_9
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_9
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 297

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	298, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers10     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_label "TIMERS_10"
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_TOKEN TIMERS_10
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_UPPER_TOKEN TIMERS_10
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8)
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 298

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	297, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label "PWM_10"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_TOKEN PWM_10
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_10
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 299

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	3, /* /soc */ \
	8, /* /soc/rcc@40023800 */ \
	26, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	300, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers11     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_label "TIMERS_11"
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_TOKEN TIMERS_11
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_UPPER_TOKEN TIMERS_11
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8)
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 300

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	299, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label "PWM_11"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_TOKEN PWM_11
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_11
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40023c00
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32f411e_disco 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v1 1
#define DT_COMPAT_HAS_OKAY_st_lis2mdl 1
#define DT_COMPAT_HAS_OKAY_st_lsm303agr_magn 1
#define DT_COMPAT_HAS_OKAY_st_lis2dh 1
#define DT_COMPAT_HAS_OKAY_st_lsm303agr_accel 1
#define DT_COMPAT_HAS_OKAY_st_stm32_otgfs 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_pll_clock 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_zephyr_lcd 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32f411e_disco_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 8
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v1_NUM_OKAY 1
#define DT_N_INST_st_lis2mdl_NUM_OKAY 1
#define DT_N_INST_st_lsm303agr_magn_NUM_OKAY 1
#define DT_N_INST_st_lis2dh_NUM_OKAY 1
#define DT_N_INST_st_lsm303agr_accel_NUM_OKAY 1
#define DT_N_INST_st_stm32_otgfs_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 1
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_pll_clock_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_zephyr_lcd_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32f411e_disco(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32f411e_disco(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f411e_disco(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f411e_disco(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc(fn) fn(DT_N_S_soc_S_rcc_40023800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v1(fn) fn(DT_N_S_soc_S_i2c_40005400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v1(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2mdl(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lis2mdl(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2mdl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2mdl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303agr_magn(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lsm303agr_magn(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303agr_magn(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303agr_magn(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2dh(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lis2dh(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2dh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2dh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303agr_accel(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lsm303agr_accel(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303agr_accel(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303agr_accel(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_otgfs(fn) fn(DT_N_S_soc_S_usb_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_otgfs(fn, ...) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_otgfs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_otgfs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40000800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_hse_clock(fn) fn(DT_N_S_clocks_S_clk_hse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_hse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_hse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_otgfs_phy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_otgfs_phy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_lcd(fn) fn(DT_N_S_lcd_0)
#define DT_FOREACH_OKAY_VARGS_zephyr_lcd(fn, ...) fn(DT_N_S_lcd_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_lcd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_lcd(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_st_lis2mdl_BUS_i2c 1
#define DT_COMPAT_st_lsm303agr_magn_BUS_i2c 1
#define DT_COMPAT_st_lis2dh_BUS_i2c 1
#define DT_COMPAT_st_lsm303agr_accel_BUS_i2c 1
